{
  "$schema": "http://json-schema.org/draft-06/schema#",
  "title": "objects",
  "definitions": {
    "account_account_counters": {
      "type": "object",
      "properties": {
        "friends": {
          "type": "integer",
          "description": "New friends requests number",
          "minimum": 1
        },
        "messages": {
          "type": "integer",
          "description": "New messages number",
          "minimum": 1
        },
        "photos": {
          "type": "integer",
          "description": "New photo tags number",
          "minimum": 1
        },
        "videos": {
          "type": "integer",
          "description": "New video tags number",
          "minimum": 1
        },
        "gifts": {
          "type": "integer",
          "description": "New gifts number",
          "minimum": 1
        },
        "events": {
          "type": "integer",
          "description": "New events number",
          "minimum": 1
        },
        "groups": {
          "type": "integer",
          "description": "New groups number",
          "minimum": 1
        },
        "notifications": {
          "type": "integer",
          "description": "New notifications number",
          "minimum": 1
        },
        "app_requests": {
          "type": "integer",
          "description": "New app requests number",
          "minimum": 1
        },
        "friends_suggestions": {
          "type": "integer",
          "description": "New friends suggestions number",
          "minimum": 1
        }
      }
    },
    "account_lookup_result": {
      "type": "object",
      "properties": {
        "found": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/account_user_xtr_contact"
          }
        },
        "other": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/account_other_contact"
          }
        }
      },
      "additionalProperties": false
    },
    "account_name_request_status": {
      "type": "string",
      "description": "Request status",
      "enum": [
        "success",
        "processing",
        "declined",
        "was_accepted",
        "was_declined"
      ]
    },
    "account_name_request": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Request ID needed to cancel the request"
        },
        "status": {
          "$ref": "#/definitions/account_name_request_status"
        },
        "first_name": {
          "type": "string",
          "description": "First name in request"
        },
        "last_name": {
          "type": "string",
          "description": "Last name in request"
        }
      }
    },
    "account_offer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Offer ID"
        },
        "title": {
          "type": "string",
          "description": "Offer title"
        },
        "instruction": {
          "type": "string",
          "description": "Instruction how to process the offer"
        },
        "instruction_html": {
          "type": "string",
          "description": "Instruction how to process the offer (HTML format)"
        },
        "short_description": {
          "type": "string",
          "description": "Offer short description"
        },
        "description": {
          "type": "string",
          "description": "Offer description"
        },
        "img": {
          "type": "string",
          "description": "URL of the preview image"
        },
        "tag": {
          "type": "string",
          "description": "Offer tag"
        },
        "price": {
          "type": "integer",
          "description": "Offer price"
        }
      },
      "additionalProperties": false
    },
    "account_onoff_options": {
      "type": "string",
      "description": "Settings parameters",
      "enum": [
        "on",
        "off"
      ]
    },
    "account_other_contact": {
      "type": "object",
      "properties": {
        "contact": {
          "type": "string",
          "description": "Contact"
        },
        "common_count": {
          "type": "integer",
          "description": "Mutual friends count"
        }
      },
      "additionalProperties": false
    },
    "account_push_conversations": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Items count"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/account_push_conversations_item"
          }
        }
      }
    },
    "account_push_conversations_item": {
      "type": "object",
      "properties": {
        "peer_id": {
          "type": "integer",
          "description": "Peer ID"
        },
        "sound": {
          "description": "Information whether the sound are enabled",
          "$ref": "#/definitions/base_bool_int"
        },
        "disabled_until": {
          "type": "integer",
          "description": "Time until that notifications are disabled in seconds"
        }
      }
    },
    "account_push_params_mode": {
      "type": "string",
      "description": "Settings parameters",
      "enum": [
        "on",
        "off",
        "no_sound",
        "no_text"
      ]
    },
    "account_push_params_settings": {
      "type": "string",
      "description": "Settings parameters",
      "enum": [
        "on",
        "off",
        "fr_of_fr"
      ]
    },
    "account_push_params": {
      "type": "object",
      "properties": {
        "msg": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/account_push_params_mode"
          }
        },
        "chat": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/account_push_params_mode"
          }
        },
        "friend": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/account_onoff_options"
          }
        },
        "friend_found": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/account_onoff_options"
          }
        },
        "friend_accepted": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/account_onoff_options"
          }
        },
        "reply": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/account_onoff_options"
          }
        },
        "comment": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/account_push_params_settings"
          }
        },
        "mention": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/account_push_params_settings"
          }
        },
        "like": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/account_push_params_settings"
          }
        },
        "repost": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/account_push_params_settings"
          }
        },
        "wall_post": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/account_onoff_options"
          }
        },
        "wall_publish": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/account_onoff_options"
          }
        },
        "group_invite": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/account_onoff_options"
          }
        },
        "group_accepted": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/account_onoff_options"
          }
        },
        "event_soon": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/account_onoff_options"
          }
        },
        "photos_tag": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/account_push_params_settings"
          }
        },
        "app_request": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/account_onoff_options"
          }
        },
        "sdk_open": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/account_onoff_options"
          }
        },
        "new_post": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/account_onoff_options"
          }
        },
        "birthday": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/account_onoff_options"
          }
        }
      }
    },
    "account_push_settings": {
      "type": "object",
      "properties": {
        "disabled": {
          "description": "Information whether notifications are disabled",
          "$ref": "#/definitions/base_bool_int"
        },
        "disabled_until": {
          "type": "integer",
          "description": "Time until that notifications are disabled in Unixtime"
        },
        "conversations": {
          "$ref": "#/definitions/account_push_conversations"
        },
        "settings": {
          "$ref": "#/definitions/account_push_params"
        }
      }
    },
    "account_user_settings": {
      "type": "object",
      "properties": {
        "first_name": {
          "type": "string",
          "description": "User first name"
        },
        "last_name": {
          "type": "string",
          "description": "User last name"
        },
        "maiden_name": {
          "type": "string",
          "description": "User maiden name"
        },
        "screen_name": {
          "type": "string",
          "description": "Domain name of the user's page"
        },
        "sex": {
          "$ref": "#/definitions/base_sex",
          "description": "User sex"
        },
        "relation": {
          "type": "integer",
          "description": "User relationship status"
        },
        "relation_partner": {
          "$ref": "#/definitions/users_user_min"
        },
        "relation_pending": {
          "type": "integer",
          "description": "Information whether relation status is pending"
        },
        "relation_requests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/users_user_min"
          }
        },
        "bdate": {
          "type": "string",
          "description": "User's date of birth"
        },
        "bdate_visibility": {
          "type": "integer",
          "description": "Information whether user's birthdate are hidden"
        },
        "home_town": {
          "type": "string",
          "description": "User's hometown"
        },
        "country": {
          "$ref": "#/definitions/base_country"
        },
        "city": {
          "$ref": "#/definitions/base_object"
        },
        "status": {
          "type": "string",
          "description": "User status"
        },
        "phone": {
          "type": "string",
          "description": "User phone number with some hidden digits"
        },
        "name_request": {
          "$ref": "#/definitions/account_name_request"
        }
      }
    },
    "account_user_xtr_contact": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/users_user_full"
        },
        {
          "properties": {
            "contact": {
              "type": "string"
            },
            "request_sent": {
              "type": "integer"
            },
            "sort_num": {
              "type": "integer"
            }
          }
        }
      ]
    },
    "account_info": {
      "type": "object",
      "properties": {
        "country": {
          "type": "string",
          "description": "Country code"
        },
        "https_required": {
          "description": "Information whether HTTPS-only is enabled",
          "$ref": "#/definitions/base_bool_int"
        },
        "own_posts_default": {
          "description": "Information whether only owners posts should be shown",
          "$ref": "#/definitions/base_bool_int"
        },
        "no_wall_replies": {
          "description": "Information whether wall comments should be hidden",
          "$ref": "#/definitions/base_bool_int"
        },
        "intro": {
          "description": "Information whether user has been processed intro",
          "$ref": "#/definitions/base_bool_int"
        },
        "lang": {
          "type": "integer",
          "description": "Language ID"
        },
        "2fa_required": {
          "description": "Two factor authentication is enabled",
          "$ref": "#/definitions/base_bool_int"
        }
      },
      "additionalProperties": false
    },
    "ads_access_role": {
      "type": "string",
      "description": "Current user's role",
      "enum": [
        "admin",
        "manager",
        "reports"
      ]
    },
    "ads_accesses": {
      "type": "object",
      "properties": {
        "client_id": {
          "type": "string",
          "description": "Client ID"
        },
        "role": {
          "$ref": "#/definitions/ads_access_role"
        }
      }
    },
    "ads_account_type": {
      "type": "string",
      "description": "Account type",
      "enum": [
        "general",
        "agency"
      ]
    },
    "ads_account": {
      "type": "object",
      "properties": {
        "account_id": {
          "type": "integer",
          "description": "Account ID"
        },
        "account_type": {
          "$ref": "#/definitions/ads_account_type"
        },
        "account_status": {
          "description": "Information whether account is active",
          "$ref": "#/definitions/base_bool_int"
        },
        "access_role": {
          "$ref": "#/definitions/ads_access_role"
        }
      },
      "required": [
        "account_id",
        "account_type",
        "account_status",
        "access_role"
      ],
      "additionalProperties": false
    },
    "ads_ad_cost_type": {
      "type": "integer",
      "description": "Cost type",
      "enum": [
        0,
        1
      ],
      "enumNames": [
        "per clicks",
        "per impressions"
      ]
    },
    "ads_ad_status": {
      "type": "integer",
      "description": "Ad atatus",
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "stopped",
        "started",
        "deleted"
      ]
    },
    "ads_ad_approved": {
      "type": "integer",
      "description": "Review status",
      "enum": [
        0,
        1,
        2,
        3
      ],
      "enumNames": [
        "not moderated",
        "pending moderation",
        "approved",
        "rejected"
      ]
    },
    "ads_ad": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Ad ID"
        },
        "campaign_id": {
          "type": "integer",
          "description": "Campaign ID"
        },
        "ad_format": {
          "type": "integer",
          "description": "Ad format"
        },
        "cost_type": {
          "$ref": "#/definitions/ads_ad_cost_type"
        },
        "cpc": {
          "type": "integer",
          "description": "Cost of a click, kopecks"
        },
        "cpm": {
          "type": "integer",
          "description": "Cost of 1000 impressions, kopecks"
        },
        "impressions_limit": {
          "type": "integer",
          "description": "Impressions limit"
        },
        "impressions_limited": {
          "$ref": "#/definitions/base_bool_int",
          "description": "Information whether impressions are limited"
        },
        "ad_platform": {
          "type": [
            "integer",
            "string"
          ],
          "description": "Ad platform"
        },
        "all_limit": {
          "type": "integer",
          "description": "Total limit"
        },
        "category1_id": {
          "type": "integer",
          "description": "Category ID"
        },
        "category2_id": {
          "type": "integer",
          "description": "Additional category ID"
        },
        "status": {
          "$ref": "#/definitions/ads_ad_status"
        },
        "name": {
          "type": "string",
          "description": "Ad title"
        },
        "approved": {
          "$ref": "#/definitions/ads_ad_approved"
        },
        "video": {
          "description": "Information whether the ad is a video",
          "$ref": "#/definitions/base_bool_int"
        },
        "disclaimer_medical": {
          "description": "Information whether disclaimer is enabled",
          "$ref": "#/definitions/base_bool_int"
        },
        "disclaimer_specialist": {
          "description": "Information whether disclaimer is enabled",
          "$ref": "#/definitions/base_bool_int"
        },
        "disclaimer_supplements": {
          "description": "Information whether disclaimer is enabled",
          "$ref": "#/definitions/base_bool_int"
        }
      },
      "required": [
        "id",
        "campaign_id",
        "ad_format",
        "cost_type",
        "all_limit",
        "status",
        "name",
        "approved"
      ],
      "additionalProperties": false
    },
    "ads_ad_layout_cost_type": {
      "type": "integer",
      "description": "Cost type",
      "enum": [
        0,
        1
      ],
      "enumNames": [
        "per clicks",
        "per impressions"
      ]
    },
    "ads_ad_layout": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Ad ID"
        },
        "campaign_id": {
          "type": "integer",
          "description": "Campaign ID"
        },
        "ad_format": {
          "type": "integer",
          "description": "Ad format"
        },
        "cost_type": {
          "$ref": "#/definitions/ads_ad_layout_cost_type"
        },
        "video": {
          "description": "Information whether the ad is a video",
          "$ref": "#/definitions/base_bool_int"
        },
        "title": {
          "type": "string",
          "description": "Ad title"
        },
        "description": {
          "type": "string",
          "description": "Ad description"
        },
        "link_url": {
          "type": "string",
          "description": "URL of advertised object"
        },
        "link_domain": {
          "type": "string",
          "description": "Domain of advertised object"
        },
        "preview_link": {
          "type": [
            "integer",
            "string"
          ],
          "description": "link to preview an ad as it is shown on the website"
        },
        "image_src": {
          "type": "integer",
          "description": "Image URL"
        },
        "image_src_2x": {
          "type": "integer",
          "description": "URL of the preview image in double size"
        }
      },
      "required": [
        "id",
        "campaign_id",
        "ad_format",
        "cost_type",
        "title",
        "description",
        "link_url",
        "image_src"
      ],
      "additionalProperties": false
    },
    "ads_campaign_type": {
      "type": "string",
      "description": "Campaign type",
      "enum": [
        "normal",
        "vk_apps_managed",
        "mobile_apps",
        "promoted_posts"
      ]
    },
    "ads_campaign_status": {
      "type": "integer",
      "description": "Campaign status",
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "stopped",
        "started",
        "deleted"
      ]
    },
    "ads_campaign": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Campaign ID"
        },
        "type": {
          "$ref": "#/definitions/ads_campaign_type"
        },
        "name": {
          "type": "string",
          "description": "Campaign title"
        },
        "status": {
          "$ref": "#/definitions/ads_campaign_status"
        },
        "day_limit": {
          "type": "string",
          "description": "Campaign's day limit, rubles"
        },
        "all_limit": {
          "type": "string",
          "description": "Campaign's total limit, rubles"
        },
        "start_time": {
          "type": "integer",
          "description": "Campaign start time, as Unixtime"
        },
        "stop_time": {
          "type": "integer",
          "description": "Campaign stop time, as Unixtime"
        }
      },
      "required": [
        "id",
        "type",
        "name",
        "status",
        "day_limit",
        "all_limit",
        "start_time",
        "stop_time"
      ],
      "additionalProperties": false
    },
    "ads_category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Category ID",
          "minimum": 1
        },
        "name": {
          "type": "string",
          "description": "Category name"
        },
        "subcategories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/base_object_with_name"
          }
        }
      },
      "required": [
        "id",
        "name"
      ],
      "additionalProperties": false
    },
    "ads_client": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Client ID"
        },
        "name": {
          "type": "string",
          "description": "Client name"
        },
        "day_limit": {
          "type": "string",
          "description": "Client's day limit, rubles"
        },
        "all_limit": {
          "type": "string",
          "description": "Client's total limit, rubles"
        }
      },
      "required": [
        "id",
        "name",
        "day_limit",
        "all_limit"
      ],
      "additionalProperties": false
    },
    "ads_criteria_sex": {
      "type": "integer",
      "description": "Sex",
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "any",
        "male",
        "female"
      ]
    },
    "ads_criteria": {
      "type": "object",
      "properties": {
        "sex": {
          "$ref": "#/definitions/ads_criteria_sex"
        },
        "age_from": {
          "type": "integer",
          "description": "Age from",
          "minimum": 0
        },
        "age_to": {
          "type": "integer",
          "description": "Age to",
          "minimum": 0
        },
        "birthday": {
          "type": "integer",
          "description": "Days to birthday"
        },
        "country": {
          "type": "integer",
          "description": "Country ID",
          "minimum": 0
        },
        "cities": {
          "type": "string",
          "description": "Cities IDs"
        },
        "cities_not": {
          "type": "string",
          "description": "Cities IDs to except"
        },
        "statuses": {
          "type": "string",
          "description": "Relationship statuses"
        },
        "groups": {
          "type": "string",
          "description": "Communities IDs"
        },
        "apps": {
          "type": "string",
          "description": "Apps IDs"
        },
        "apps_not": {
          "type": "string",
          "description": "Apps IDs to except"
        },
        "districts": {
          "type": "string",
          "description": "Districts IDs"
        },
        "stations": {
          "type": "string",
          "description": "Stations IDs"
        },
        "streets": {
          "type": "string",
          "description": "Streets IDs"
        },
        "schools": {
          "type": "string",
          "description": "Schools IDs"
        },
        "positions": {
          "type": "string",
          "description": "Positions IDs"
        },
        "religions": {
          "type": "string",
          "description": "Religions IDs"
        },
        "interests": {
          "type": "string",
          "description": "Interests"
        },
        "interest_categories": {
          "type": "string",
          "description": "Interests categories IDs"
        },
        "user_devices": {
          "type": "string",
          "description": "Devices"
        },
        "user_os": {
          "type": "string",
          "description": "Operating systems"
        },
        "user_browsers": {
          "type": "string",
          "description": "Browsers"
        },
        "retargeting_groups": {
          "type": "string",
          "description": "Retargeting groups IDs"
        },
        "retargeting_groups_not": {
          "type": "string",
          "description": "Retargeting groups IDs to except"
        },
        "paying": {
          "description": "Information whether the user has proceeded VK payments before",
          "$ref": "#/definitions/base_bool_int"
        },
        "travellers": {
          "description": "Travellers only",
          "$ref": "#/definitions/base_property_exists"
        },
        "school_from": {
          "type": "integer",
          "description": "School graduation year from"
        },
        "school_to": {
          "type": "integer",
          "description": "School graduation year to"
        },
        "uni_from": {
          "type": "integer",
          "description": "University graduation year from"
        },
        "uni_to": {
          "type": "integer",
          "description": "University graduation year to"
        }
      },
      "additionalProperties": false
    },
    "ads_demo_stats": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Object ID"
        },
        "type": {
          "$ref": "#/definitions/ads_object_type"
        },
        "stats": {
          "$ref": "#/definitions/ads_demostats_format"
        }
      },
      "additionalProperties": false
    },
    "ads_demostats_format": {
      "type": "object",
      "properties": {
        "day": {
          "type": "string",
          "description": "Day as YYYY-MM-DD"
        },
        "month": {
          "type": "string",
          "description": "Month as YYYY-MM"
        },
        "overall": {
          "type": "integer",
          "description": "1 if period=overall"
        },
        "sex": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ads_stats_sex"
          }
        },
        "age": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ads_stats_age"
          }
        },
        "sex_age": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ads_stats_sex_age"
          }
        },
        "cities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ads_stats_cities"
          }
        }
      },
      "additionalProperties": false
    },
    "ads_flood_stats": {
      "type": "object",
      "properties": {
        "left": {
          "type": "integer",
          "description": "Requests left"
        },
        "refresh": {
          "type": "integer",
          "description": "Time to refresh in seconds"
        }
      },
      "required": [
        "left",
        "refresh"
      ],
      "additionalProperties": false
    },
    "ads_link_status": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "description": "Link status"
        },
        "description": {
          "type": "string",
          "description": "Reject reason"
        },
        "redirect_url": {
          "type": "string",
          "description": "URL"
        }
      },
      "required": [
        "status",
        "description",
        "redirect_url"
      ],
      "additionalProperties": false
    },
    "ads_object_type": {
      "type": "string",
      "description": "Object type",
      "enum": [
        "ad",
        "campaign",
        "client",
        "office"
      ]
    },
    "ads_paragraphs": {
      "type": "object",
      "properties": {
        "paragraph": {
          "type": "string",
          "description": "Rules paragraph"
        }
      }
    },
    "ads_reject_reason": {
      "type": "object",
      "properties": {
        "comment": {
          "type": "string",
          "description": "Comment text"
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ads_rules"
          }
        }
      },
      "additionalProperties": false
    },
    "ads_rules": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "Comment"
        },
        "paragraphs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ads_paragraphs"
          }
        }
      }
    },
    "ads_stats": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Object ID"
        },
        "type": {
          "$ref": "#/definitions/ads_object_type"
        },
        "stats": {
          "$ref": "#/definitions/ads_stats_format"
        }
      },
      "additionalProperties": false
    },
    "ads_stats_format": {
      "type": "object",
      "properties": {
        "day": {
          "type": "string",
          "description": "Day as YYYY-MM-DD"
        },
        "month": {
          "type": "string",
          "description": "Month as YYYY-MM"
        },
        "overall": {
          "type": "integer",
          "description": "1 if period=overall"
        },
        "spent": {
          "type": "integer",
          "description": "Spent funds"
        },
        "impressions": {
          "type": "integer",
          "description": "Impressions number"
        },
        "clicks": {
          "type": "integer",
          "description": "Clicks number"
        },
        "reach": {
          "type": "integer",
          "description": "Reach "
        },
        "video_views": {
          "type": "integer",
          "description": "Video views number"
        },
        "video_views_half": {
          "type": "integer",
          "description": "Video views (half of video)"
        },
        "video_views_full": {
          "type": "integer",
          "description": "Video views (full video)"
        },
        "video_clicks_site": {
          "type": "integer",
          "description": "Clickthoughs to the advertised site"
        },
        "join_rate": {
          "type": "integer",
          "description": "Events number"
        }
      }
    },
    "ads_stats_age": {
      "type": "object",
      "properties": {
        "impressions_rate": {
          "type": "number",
          "description": "Impressions rate"
        },
        "clicks_rate": {
          "type": "number",
          "description": "Clicks rate"
        },
        "value": {
          "type": "string",
          "description": "Age interval"
        }
      }
    },
    "ads_stats_cities": {
      "type": "object",
      "properties": {
        "impressions_rate": {
          "type": "number",
          "description": "Impressions rate"
        },
        "clicks_rate": {
          "type": "number",
          "description": "Clicks rate"
        },
        "value": {
          "type": "integer",
          "description": "City ID"
        },
        "name": {
          "type": "string",
          "description": "City name"
        }
      }
    },
    "ads_stats_sex_value": {
      "type": "string",
      "description": "Sex",
      "enum": [
        "f",
        "m"
      ],
      "enumNames": [
        "female",
        "male"
      ]
    },
    "ads_stats_sex": {
      "type": "object",
      "properties": {
        "impressions_rate": {
          "type": "number",
          "description": "Impressions rate"
        },
        "clicks_rate": {
          "type": "number",
          "description": "Clicks rate"
        },
        "value": {
          "$ref": "#/definitions/ads_stats_sex_value"
        }
      }
    },
    "ads_stats_sex_age": {
      "type": "object",
      "properties": {
        "impressions_rate": {
          "type": "number",
          "description": "Impressions rate"
        },
        "clicks_rate": {
          "type": "number",
          "description": "Clicks rate"
        },
        "value": {
          "type": "string",
          "description": "Sex and age interval"
        }
      }
    },
    "ads_targ_stats": {
      "type": "object",
      "properties": {
        "audience_count": {
          "type": "integer",
          "description": "Audience"
        },
        "recommended_cpc": {
          "type": "number",
          "description": "Recommended CPC value"
        },
        "recommended_cpm": {
          "type": "number",
          "description": "Recommended CPM value"
        }
      },
      "required": [
        "audience_count"
      ],
      "additionalProperties": false
    },
    "ads_targ_suggestions": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Object ID"
        },
        "name": {
          "type": "string",
          "description": "Object name"
        }
      },
      "additionalProperties": false
    },
    "ads_targ_suggestions_regions": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Object ID"
        },
        "name": {
          "type": "string",
          "description": "Object name"
        },
        "type": {
          "type": "string",
          "description": "Object type"
        }
      },
      "additionalProperties": false
    },
    "ads_targ_suggestions_cities": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Object ID"
        },
        "name": {
          "type": "string",
          "description": "Object name"
        },
        "parent": {
          "type": "string",
          "description": "Parent object"
        }
      },
      "additionalProperties": false
    },
    "ads_targ_suggestions_schools_type": {
      "type": "string",
      "description": "School type",
      "enum": [
        "school",
        "university",
        "faculty",
        "chair"
      ]
    },
    "ads_targ_suggestions_schools": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "School ID"
        },
        "name": {
          "type": "string",
          "description": "School title"
        },
        "desc": {
          "type": "string",
          "description": "Full school title"
        },
        "type": {
          "$ref": "#/definitions/ads_targ_suggestions_schools_type"
        },
        "parent": {
          "type": "string",
          "description": "City name"
        }
      },
      "additionalProperties": false
    },
    "ads_targ_settings": {
      "type": "object",
      "allOf": [
        {
          "properties": {
            "id": {
              "type": "integer",
              "description": "Ad ID"
            },
            "campaign_id": {
              "type": "integer",
              "description": "Campaign ID"
            }
          }
        },
        {
          "$ref": "#/definitions/ads_criteria"
        }
      ]
    },
    "ads_target_group": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Group ID"
        },
        "name": {
          "type": "string",
          "description": "Group name"
        },
        "domain": {
          "type": "string",
          "description": "Site domain"
        },
        "audience_count": {
          "type": "integer",
          "description": "Audience"
        },
        "lifetime": {
          "type": "integer",
          "description": "Number of days for user to be in group"
        },
        "pixel": {
          "type": "string",
          "description": "Pixel code"
        }
      },
      "additionalProperties": false
    },
    "ads_users": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "description": "User ID"
        },
        "accesses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ads_accesses"
          }
        }
      },
      "required": [
        "user_id",
        "accesses"
      ],
      "additionalProperties": false
    },
    "ads_post_stats": {
      "type": "object",
      "allOf": [
        {
          "properties": {
            "ad_id": {
              "type": "integer",
              "description": "Object ID"
            }
          }
        },
        {
          "$ref": "#/definitions/stats_wallpost_stat"
        }
      ]
    },
    "apps_app_type": {
      "type": "string",
      "description": "Application type",
      "enum": [
        "app",
        "game",
        "site",
        "standalone"
      ]
    },
    "apps_app_leaderboard_type": {
      "type": "integer",
      "description": "Leaderboard type",
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "not supported",
        "levels",
        "points"
      ]
    },
    "apps_app": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Application ID"
        },
        "title": {
          "type": "string",
          "description": "Application title"
        },
        "screen_name": {
          "type": "string",
          "description": "Screen name"
        },
        "description": {
          "type": "string",
          "description": "Application description"
        },
        "icon_278": {
          "type": "string",
          "description": "URL of the app icon with 279 px in width"
        },
        "icon_150": {
          "type": "string",
          "description": "URL of the app icon with 150 px in width"
        },
        "icon_139": {
          "type": "string",
          "description": "URL of the app icon with 139 px in width"
        },
        "icon_75": {
          "type": "string",
          "description": "URL of the app icon with 75 px in width"
        },
        "banner_560": {
          "type": "string",
          "description": "URL of the app banner with 560 px in width"
        },
        "banner_1120": {
          "type": "string",
          "description": "URL of the app banner with 1120 px in width"
        },
        "type": {
          "$ref": "#/definitions/apps_app_type"
        },
        "section": {
          "type": "string",
          "description": "Application section name"
        },
        "author_url": {
          "type": "string",
          "description": "Application author's URL"
        },
        "author_id": {
          "type": "integer",
          "description": "Application author's ID"
        },
        "author_group": {
          "type": "integer",
          "description": "Official community's ID"
        },
        "members_count": {
          "type": "integer",
          "description": "Members number"
        },
        "published_date": {
          "type": "integer",
          "description": "Date when the application has been published in Unixtime"
        },
        "catalog_position": {
          "type": "integer",
          "description": "Catalog position"
        },
        "screenshots": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/photos_photo"
          }
        },
        "international": {
          "type": "integer",
          "description": "Information whether the application is multilanguage"
        },
        "leaderboard_type": {
          "$ref": "#/definitions/apps_app_leaderboard_type"
        },
        "genre_id": {
          "type": "integer",
          "description": "Genre ID"
        },
        "genre": {
          "type": "string",
          "description": "Genre name"
        },
        "platform_id": {
          "type": "integer",
          "description": "Application ID in store"
        },
        "is_in_catalog": {
          "type": "integer",
          "description": "Information whether application is in mobile catalog"
        }
      },
      "required": [
        "id",
        "title",
        "type"
      ],
      "additionalProperties": false
    },
    "apps_leaderboard": {
      "type": "object",
      "properties": {
        "score": {
          "type": "integer",
          "description": "Score number"
        },
        "level": {
          "type": "integer",
          "description": "Level"
        },
        "points": {
          "type": "integer",
          "description": "Points number"
        },
        "user_id": {
          "type": "integer",
          "description": "User ID"
        }
      },
      "required": [
        "user_id"
      ]
    },
    "audio_audio": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Audio ID",
          "minimum": 0
        },
        "owner_id": {
          "type": "integer",
          "description": "Audio owner's ID"
        },
        "artist": {
          "type": "string",
          "description": "Artist name"
        },
        "title": {
          "type": "string",
          "description": "Title"
        },
        "url": {
          "type": "string",
          "description": "URL of mp3 file"
        },
        "access_key": {
          "type": "string",
          "description": "Access key for the audio"
        }
      },
      "required": [
        "id",
        "owner_id",
        "artist",
        "title"
      ],
      "additionalProperties": false
    },
    "audio_audio_full": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/audio_audio"
        },
        {
          "properties": {
            "duration": {
              "type": "integer",
              "description": "Duration in seconds",
              "minimum": 0
            },
            "date": {
              "type": "integer",
              "description": "Date when uploaded",
              "minimum": 0
            },
            "album_id": {
              "type": "integer",
              "description": "Album ID",
              "minimum": 0
            },
            "lyrics_id": {
              "type": "integer",
              "description": "Lyrics ID",
              "minimum": 0
            },
            "genre_id": {
              "type": "integer",
              "description": "Genre ID",
              "minimum": 0
            },
            "no_search": {
              "description": "Information whether the audio is hidden from search",
              "$ref": "#/definitions/base_bool_int"
            },
            "is_hq": {
              "$ref": "#/definitions/base_bool_int"
            }
          },
          "required": [
            "duration",
            "date"
          ],
          "additionalProperties": false
        }
      ]
    },
    "audio_lyrics": {
      "type": "object",
      "properties": {
        "lyrics_id": {
          "type": "integer",
          "description": "Lyrics ID"
        },
        "text": {
          "type": "string",
          "description": "Lyrics text"
        }
      },
      "required": [
        "lyrics_id",
        "text"
      ],
      "additionalProperties": false
    },
    "audio_audio_upload_response": {
      "type": "object",
      "properties": {
        "redirect": {
          "type": "string",
          "description": "Redirect URL"
        },
        "server": {
          "type": "integer",
          "description": "Upload server number"
        },
        "audio": {
          "type": "string",
          "description": "Uploaded aduio data"
        },
        "hash": {
          "type": "string",
          "description": "Uploading hash"
        }
      }
    },
    "base_bool_int": {
      "type": "integer",
      "enum": [
        0,
        1
      ],
      "enumNames": [
        "no",
        "yes"
      ]
    },
    "base_upload_server": {
      "type": "object",
      "properties": {
        "upload_url": {
          "type": "string",
          "description": "Upload URL"
        }
      },
      "required": [
        "upload_url"
      ],
      "additionalProperties": false
    },
    "base_comments_info": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Comments number"
        },
        "can_post": {
          "$ref": "#/definitions/base_bool_int",
          "description": "Information whether current user can comment the post"
        },
        "groups_can_post": {
          "$ref": "#/definitions/base_bool_int",
          "description": "Information whether groups can comment the post"
        }
      }
    },
    "base_country": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Country ID",
          "minimum": 1
        },
        "title": {
          "type": "string",
          "description": "Country title"
        }
      },
      "required": [
        "id",
        "title"
      ],
      "additionalProperties": false
    },
    "base_city": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "City ID",
          "minimum": 1
        },
        "title": {
          "type": "string",
          "description": "City title"
        }
      },
      "required": [
        "id",
        "title"
      ],
      "additionalProperties": false
    },
    "base_error": {
      "type": "object",
      "properties": {
        "error_code": {
          "type": "integer",
          "description": "Error code"
        },
        "error_msg": {
          "type": "string",
          "description": "Error message"
        },
        "request_params": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/base_request_param"
          }
        }
      }
    },
    "base_request_param": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Parameter name"
        },
        "value": {
          "type": "string",
          "description": "Parameter value"
        }
      }
    },
    "base_geo": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Place type"
        },
        "coordinates": {
          "$ref": "#/definitions/base_geo_coordinates"
        },
        "place": {
          "$ref": "#/definitions/base_place"
        },
        "showmap": {
          "type": "integer",
          "description": "Information whether a map is showed"
        }
      }
    },
    "base_geo_coordinates": {
      "type": "object",
      "properties": {
        "latitude": {
          "type": "number"
        },
        "longitude": {
          "type": "number"
        }
      },
      "required": [
        "latitude",
        "longitude"
      ],
      "additionalProperties": false
    },
    "base_likes_info": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Likes number"
        },
        "user_likes": {
          "type": "integer",
          "description": "Information whether current uer has liked the post"
        },
        "can_like": {
          "$ref": "#/definitions/base_bool_int",
          "description": "Information whether current user can like the post"
        },
        "can_publish": {
          "$ref": "#/definitions/base_bool_int",
          "description": "Information whether current user can repost"
        }
      },
      "required": [
        "count",
        "user_likes",
        "can_like"
      ],
      "additionalProperties": false
    },
    "base_likes": {
      "type": "object",
      "properties": {
        "user_likes": {
          "description": "Information whether current user likes the photo",
          "$ref": "#/definitions/base_bool_int"
        },
        "count": {
          "type": "integer",
          "description": "Likes number"
        }
      },
      "additionalProperties": false
    },
    "base_link": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "Link URL"
        },
        "title": {
          "type": "string",
          "description": "Link title"
        },
        "caption": {
          "type": "string",
          "description": "Link caption"
        },
        "description": {
          "type": "string",
          "description": "Link description"
        },
        "photo": {
          "$ref": "#/definitions/photos_photo"
        },
        "preview_url": {
          "type": "string",
          "description": "URL of the page with article preview"
        },
        "preview_page": {
          "type": "string",
          "description": "String ID of the page with article preview"
        },
        "button": {
          "$ref": "#/definitions/base_link_button"
        },
        "product": {
          "$ref": "#/definitions/base_link_product"
        },
        "rating": {
          "$ref": "#/definitions/base_link_rating"
        },
        "application": {
          "$ref": "#/definitions/base_link_application"
        }
      },
      "required": [
        "url"
      ],
      "additionalProperties": false
    },
    "base_link_button": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "Button title"
        },
        "action": {
          "$ref": "#/definitions/base_link_button_action",
          "description": "Button action"
        }
      },
      "additionalProperties": false
    },
    "base_link_button_action": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/base_link_button_action_type"
        },
        "url": {
          "type": "string",
          "description": "Action URL"
        }
      },
      "additionalProperties": false
    },
    "base_link_button_action_type": {
      "type": "string",
      "description": "Action type",
      "enum": [
        "open_url"
      ],
      "enumNames": [
        "open_url"
      ]
    },
    "base_link_product": {
      "type": "object",
      "properties": {
        "price": {
          "$ref": "#/definitions/market_price"
        }
      },
      "additionalProperties": false
    },
    "base_link_application": {
      "type": "object",
      "properties": {
        "app_id": {
          "type": "number",
          "description": "Application Id"
        },
        "store": {
          "$ref": "#/definitions/base_link_application_store"
        }
      },
      "additionalProperties": false
    },
    "base_link_application_store": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "description": "Store Id"
        },
        "name": {
          "type": "string",
          "description": "Store name"
        }
      },
      "additionalProperties": false
    },
    "base_link_rating": {
      "type": "object",
      "properties": {
        "stars": {
          "type": "number",
          "description": "Count of stars"
        },
        "reviews_count": {
          "type": "integer",
          "description": "Count of reviews"
        }
      },
      "additionalProperties": false
    },
    "base_object": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Object ID"
        },
        "title": {
          "type": "string",
          "description": "Object title"
        }
      },
      "required": [
        "id",
        "title"
      ],
      "additionalProperties": false
    },
    "base_object_with_name": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Object ID"
        },
        "name": {
          "type": "string",
          "description": "Object name"
        }
      },
      "required": [
        "id",
        "name"
      ],
      "additionalProperties": false
    },
    "base_object_count": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Items count"
        }
      }
    },
    "base_ok_response": {
      "type": "integer",
      "description": "Returns 1 if request has been processed successfully",
      "enum": [
        1
      ],
      "enumNames": [
        "ok"
      ]
    },
    "base_place": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Place ID"
        },
        "title": {
          "type": "string",
          "description": "Place title"
        },
        "latitude": {
          "type": "number",
          "description": "Place latitude"
        },
        "longitude": {
          "type": "number",
          "description": "Place longitude"
        },
        "created": {
          "type": "integer",
          "description": "Date of the place creation in Unixtime"
        },
        "icon": {
          "type": "string",
          "description": "URL of the place's icon"
        },
        "checkins": {
          "type": "integer",
          "description": "Checkins number"
        },
        "type": {
          "type": "string",
          "description": "Place type"
        },
        "country": {
          "type": "string",
          "description": "Country name"
        },
        "city": {
          "type": "string",
          "description": "City name"
        },
        "address": {
          "type": "string",
          "description": "Place address"
        }
      }
    },
    "base_property_exists": {
      "type": "integer",
      "enum": [
        1
      ],
      "enumNames": [
        "Property exists"
      ]
    },
    "base_reposts_info": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Reposts number"
        },
        "user_reposted": {
          "type": "integer",
          "description": "Information whether current user has reposted the post"
        }
      }
    },
    "base_sticker": {
      "type": "object",
      "properties": {
        "sticker_id": {
          "type": "integer",
          "description": "Sticker ID"
        },
        "product_id": {
          "type": "integer",
          "description": "Collection ID"
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/base_image"
          }
        },
        "images_with_background": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/base_image"
          }
        }
      },
      "additionalProperties": false
    },
    "base_user_id": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "description": "User ID"
        }
      }
    },
    "base_sex": {
      "type": "integer",
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "unknown",
        "female",
        "male"
      ]
    },
    "base_image": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "Image url"
        },
        "width": {
          "type": "integer",
          "description": "Image width",
          "minimum": 0
        },
        "height": {
          "type": "integer",
          "description": "Image height",
          "minimum": 0
        }
      },
      "required": [
        "url",
        "width",
        "height"
      ],
      "additionalProperties": false
    },
    "board_default_order": {
      "type": "integer",
      "description": "Sort type",
      "enum": [
        1,
        2,
        -1,
        -2
      ],
      "enumNames": [
        "desc_updated",
        "desc_created",
        "asc_updated",
        "asc_created"
      ]
    },
    "board_topic_poll": {
      "type": "object",
      "properties": {
        "poll_id": {
          "type": "integer",
          "description": "Poll ID",
          "minimum": 1
        },
        "owner_id": {
          "type": "integer",
          "description": "Poll owner's ID"
        },
        "created": {
          "type": "integer",
          "description": "Date when poll has been created in Unixtime",
          "minimum": 0
        },
        "is_closed": {
          "description": "Information whether the poll is closed",
          "$ref": "#/definitions/base_bool_int"
        },
        "question": {
          "type": "string",
          "description": "Poll question"
        },
        "votes": {
          "type": "string",
          "description": "Votes number",
          "minimum": 0
        },
        "answer_id": {
          "type": "integer",
          "description": "Current user's answer ID",
          "minimum": 0
        },
        "answers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/polls_answer"
          }
        }
      },
      "required": [
        "poll_id",
        "owner_id",
        "created",
        "question",
        "votes",
        "answer_id",
        "answers"
      ],
      "additionalProperties": false
    },
    "board_topic": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Topic ID"
        },
        "title": {
          "type": "string",
          "description": "Topic title"
        },
        "created": {
          "type": "integer",
          "description": "Date when the topic has been created in Unixtime"
        },
        "created_by": {
          "type": "integer",
          "description": "Creator ID"
        },
        "updated": {
          "type": "integer",
          "description": "Date when the topic has been updated in Unixtime"
        },
        "updated_by": {
          "type": "integer",
          "description": "ID of user who updated the topic"
        },
        "is_closed": {
          "description": "Information whether the topic is closed",
          "$ref": "#/definitions/base_bool_int"
        },
        "is_fixed": {
          "description": "Information whether the topic is fixed",
          "$ref": "#/definitions/base_bool_int"
        },
        "comments": {
          "type": "integer",
          "description": "Comments number"
        }
      }
    },
    "board_topic_comment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Comment ID",
          "minimum": 1
        },
        "from_id": {
          "type": "integer",
          "description": "Author ID"
        },
        "date": {
          "type": "integer",
          "description": "Date when the comment has been added in Unixtime",
          "minimum": 0
        },
        "text": {
          "type": "string",
          "description": "Comment text"
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/wall_comment_attachment"
          }
        },
        "real_offset": {
          "type": "integer",
          "description": "Real position of the comment"
        }
      },
      "required": [
        "id",
        "from_id",
        "date",
        "text"
      ],
      "additionalProperties": false
		},
    "messages_conversation": {
      "type": "object",
      "properties": {
        "peer": {
          "$ref": "#/definitions/messages_conversation_peer"
        },
        "in_read": {
          "type": "integer",
          "description": "ID of the last read incoming message"
        },
        "out_read": {
          "type": "integer",
          "description": "ID of the last read outcoming message"
        },
        "unread_count": {
          "type": "integer",
          "description": "Number of unread messages"
        },
        "important": {
          "type": "boolean",
          "description": "True, if the conversation marked as important (only for community messages)"
        },
        "unanswered": {
          "type": "boolean",
          "description": "True, if the conversation marked as unanswered (only for community messages)"
        },
        "push_settings": {
          "$ref": "#/definitions/messages_conversation_push_settings"
        },
        "can_write": {
          "$ref": "#/definitions/messages_conversation_can_write"
        },
        "chat_settings": {
          "$ref": "#/definitions/messages_conversation_chat_settings"
        }
      }
    },
    "messages_conversation_can_write": {
      "type": "object",
      "properties": {
        "allowed": {
          "type": "boolean",
          "description": "True, if the user can send message to the conversation"
        },
        "reason": {
          "type": "integer",
          "description": "Error code for allowed = false",
          "enum": [
            18,
            203,
            900,
            901,
            902,
            915,
            916,
            917,
            918
          ],
          "enumNames": [
            "the user is deleted or blocked",
            "no access to the community",
            "can't send message to user from blacklist",
            "the user has denied messages from the community",
            "the user has closed messages using privacy settings",
            "messages are disabled in the community",
            "messages are blocked in the community",
            "no access to conversation",
            "no access to e-mail"
          ]
        }
      }
    },
    "messages_conversation_chat_settings": {
      "type": "object",
      "properties": {
        "members_count": {
          "type": "integer",
          "description": "Conversation members number"
        },
        "title": {
          "type": "string",
          "description": "Conversation title"
        },
        "pinned_message": {
          "$ref": "#/definitions/messages_pinned_message"
        },
        "state": {
          "$ref": "#/definitions/messages_chat_settings_state"
        },
        "photo": {
          "$ref": "#/definitions/messages_chat_settings_photo"
        }
      }
    },
    "messages_conversation_peer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Destination ID"
        },
        "type": {
          "type": "string",
          "description": "Conversation type. possible values: user, chat, group, email"
        },
        "local_id": {
          "type": "integer",
          "description": "Local destination ID. For conversations — id - 2000000000, for community — -id, for e-mail — -(id+2000000000)"
        }
      }
    },
    "messages_conversation_push_settings": {
      "type": "object",
      "properties": {
        "disabled_until": {
          "type": "integer",
          "description": "Timestamp, to which notification are disables"
        },
        "disabled_forever": {
          "type": "boolean",
          "description": "True, if notifications are disabled totally"
        },
        "no_sound": {
          "type": "boolean",
          "description": "True, if notification alert sound is disabled"
        }
      }
    },
    "database_city": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/base_object"
        },
        {
          "properties": {
            "area": {
              "type": "string",
              "description": "Area title"
            },
            "region": {
              "type": "string",
              "description": "Region title"
            },
            "important": {
              "description": "Information whether the city is included in important cities list",
              "$ref": "#/definitions/base_bool_int"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "database_faculty": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Faculty ID"
        },
        "title": {
          "type": "string",
          "description": "Faculty title"
        }
      }
    },
    "database_region": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Region ID"
        },
        "title": {
          "type": "string",
          "description": "Region title"
        }
      }
    },
    "database_school": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "School ID"
        },
        "title": {
          "type": "string",
          "description": "School title"
        }
      }
		},
		"database_street": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Street ID"
        },
        "title": {
          "type": "string",
          "description": "Street title"
        }
      }
    },
    "database_university": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "University ID"
        },
        "title": {
          "type": "string",
          "description": "University title"
        }
      }
    },
    "docs_doc": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Document ID",
          "minimum": 0
        },
        "owner_id": {
          "type": "integer",
          "description": "Document owner ID"
        },
        "title": {
          "type": "string",
          "description": "Document title"
        },
        "size": {
          "type": "integer",
          "description": "File size in bites",
          "minimum": 0
        },
        "ext": {
          "type": "string",
          "description": "File extension"
        },
        "url": {
          "type": "string",
          "description": "File URL"
        },
        "date": {
          "type": "integer",
          "description": "Date when file has been uploaded in Unixtime",
          "minimum": 0
        },
        "type": {
          "type": "integer",
          "description": "Document type"
        },
        "preview": {
          "$ref": "#/definitions/docs_doc_preview"
        },
        "access_key": {
          "type": "string",
          "description": "Access key for the document"
        }
      },
      "required": [
        "id",
        "owner_id",
        "title",
        "size",
        "ext",
        "date",
        "type"
      ],
      "additionalProperties": false
    },
    "docs_doc_types": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Doc type ID"
        },
        "title": {
          "type": "string",
          "description": "Doc type title"
        },
        "count": {
          "type": "integer",
          "description": "Number of docs"
        }
      }
    },
    "docs_doc_upload_response": {
      "type": "object",
      "properties": {
        "file": {
          "type": "string",
          "description": "Uploaded file data"
        }
      }
    },
    "docs_doc_preview": {
      "type": "object",
      "properties": {
        "photo": {
          "$ref": "#/definitions/docs_doc_preview_photo"
        },
        "video": {
          "$ref": "#/definitions/docs_doc_preview_video"
        }
      }
    },
    "docs_doc_preview_photo": {
      "type": "object",
      "properties": {
        "sizes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/photos_photo_sizes"
          }
        }
      }
    },
    "docs_doc_preview_video": {
      "type": "object",
      "properties": {
        "src": {
          "type": "string",
          "description": "Video URL"
        },
        "width": {
          "type": "integer",
          "description": "Video's width in pixels",
          "minimum": 0
        },
        "height": {
          "type": "integer",
          "description": "Video's height in pixels",
          "minimum": 0
        },
        "filesize": {
          "type": "integer",
          "description": "Video file size in bites",
          "minimum": 0
        }
      },
      "required": [
        "src",
        "width",
        "height",
        "filesize"
      ],
      "additionalProperties": false
    },
    "fave_faves_link": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Link ID"
        },
        "url": {
          "type": "string",
          "description": "Link URL"
        },
        "title": {
          "type": "string",
          "description": "Link title"
        },
        "description": {
          "type": "string",
          "description": "Link description"
        },
        "photo_50": {
          "type": "string",
          "description": "URL of the preview image with 50 px in width"
        },
        "photo_100": {
          "type": "string",
          "description": "URL of the preview image with 100 px in width"
        },
        "photo_200": {
          "type": "string",
          "description": "URL of the preview image with 200 px in width"
        }
      }
    },
    "friends_friends_list": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "List title"
        },
        "id": {
          "type": "integer",
          "description": "List ID"
        }
      },
      "required": [
        "name",
        "id"
      ],
      "additionalProperties": false
    },
    "friends_requests": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "description": "User ID",
          "minimum": 1
        },
        "from": {
          "type": "string",
          "description": "ID of the user by whom friend has been suggested"
        },
        "mutual": {
          "$ref": "#/definitions/friends_requests_mutual"
        }
      },
      "additionalProperties": false
    },
    "friends_requests_mutual": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Total mutual friends number"
        },
        "users": {
          "type": "array",
          "items": {
            "type": "integer",
            "description": "User ID",
            "minimum": 1
          }
        }
      },
      "additionalProperties": false
    },
    "friends_requests_xtr_message": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "description": "User ID",
          "minimum": 1
        },
        "from": {
          "type": "string",
          "description": "ID of the user by whom friend has been suggested"
        },
        "mutual": {
          "$ref": "#/definitions/friends_requests_mutual"
        },
        "message": {
          "type": "string",
          "description": "Message sent with a request"
        }
      },
      "additionalProperties": false
    },
    "friends_mutual_friend": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "User ID"
        },
        "common_count": {
          "type": "integer",
          "description": "Total mutual friends number"
        },
        "common_friends": {
          "type": "array",
          "items": {
            "type": "integer",
            "description": "User ID",
            "minimum": 1
          }
        }
      },
      "additionalProperties": false
    },
    "friends_friend_status_status": {
      "type": "integer",
      "description": "Friend status with the user",
      "enum": [
        0,
        1,
        2,
        3
      ],
      "enumNames": [
        "not a friend",
        "outcoming request",
        "incoming request",
        "is friend"
      ]
    },
    "friends_friend_status": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "description": "User ID",
          "minimum": 1
        },
        "friend_status": {
          "$ref": "#/definitions/friends_friend_status_status"
        },
        "request_message": {
          "type": "string",
          "description": "Message sent with request"
        },
        "read_state": {
          "$ref": "#/definitions/base_bool_int",
          "description": "Information whether request is unviewed"
        },
        "sign": {
          "type": "string",
          "description": "MD5 hash for the result validation"
        }
      },
      "required": [
        "user_id",
        "friend_status"
      ],
      "additionalProperties": false
    },
    "friends_user_xtr_lists": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/users_user_full"
        },
        {
          "properties": {
            "lists": {
              "type": "array",
              "items": {
                "type": "integer",
                "description": "IDs of friend lists with user"
              }
            }
          }
        }
      ]
    },
    "friends_user_xtr_phone": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/users_user_full"
        },
        {
          "properties": {
            "phone": {
              "type": "string",
              "description": "User phone"
            }
          }
        }
      ]
    },
    "gifts_layout": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Gift ID"
        },
        "thumb_256": {
          "type": "string",
          "description": "URL of the preview image with 256 px in width"
        },
        "thumb_96": {
          "type": "string",
          "description": "URL of the preview image with 96 px in width"
        },
        "thumb_48": {
          "type": "string",
          "description": "URL of the preview image with 48 px in width"
        }
      }
    },
    "gifts_gift_privacy": {
      "type": "integer",
      "description": "Gift privacy",
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "name and message for all",
        "name for all",
        "name and message for recipient only"
      ]
    },
    "gifts_gift": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Gift ID"
        },
        "from_id": {
          "type": "integer",
          "description": "Gift sender ID"
        },
        "message": {
          "type": "string",
          "description": "Comment text"
        },
        "date": {
          "type": "integer",
          "description": "Date when gist has been sent in Unixtime"
        },
        "gift": {
          "$ref": "#/definitions/gifts_layout"
        },
        "privacy": {
          "$ref": "#/definitions/gifts_gift_privacy"
        },
        "gift_hash": {
          "type": "string",
          "description": "Hash"
        }
      }
    },
    "groups_ban_info_reason": {
      "type": "integer",
      "description": "Ban reason",
      "enum": [
        0,
        1,
        2,
        3,
        4
      ],
      "enumNames": [
        "other",
        "spam",
        "verbal abuse",
        "strong language",
        "flood"
      ]
    },
    "groups_ban_info": {
      "type": "object",
      "properties": {
        "admin_id": {
          "type": "integer",
          "description": "Administrator ID",
          "minimum": 1
        },
        "date": {
          "type": "integer",
          "description": "Date when user has been added to blacklist in Unixtime",
          "minimum": 0
        },
        "reason": {
          "$ref": "#/definitions/groups_ban_info_reason"
        },
        "comment": {
          "type": "string",
          "description": "Comment for a ban"
        },
        "end_date": {
          "type": "integer",
          "description": "Date when user will be removed from blacklist in Unixtime",
          "minimum": 0
        }
      },
      "additionalProperties": false
    },
    "groups_groups_array": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Communities number",
          "minimum": 0
        },
        "items": {
          "type": "array",
          "items": {
            "type": "integer",
            "description": "Community ID"
          }
        }
      },
      "required": [
        "count",
        "items"
      ],
      "additionalProperties": false
    },
    "groups_group_category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Category ID",
          "minimum": 1
        },
        "name": {
          "type": "string",
          "description": "Category name"
        },
        "subcategories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/base_object_with_name"
          }
        }
      },
      "required": [
        "id",
        "name"
      ],
      "additionalProperties": false
    },
    "groups_group_category_full": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Category ID",
          "minimum": 1
        },
        "name": {
          "type": "string",
          "description": "Category name"
        },
        "subcategories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/groups_group_category"
          }
        },
        "page_count": {
          "type": "integer",
          "description": "Pages number"
        },
        "page_previews": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/groups_group"
          }
        }
      },
      "required": [
        "id",
        "name",
        "page_count",
        "page_previews"
      ],
      "additionalProperties": false
    },
    "groups_contacts_item": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "description": "User ID"
        },
        "desc": {
          "type": "string",
          "description": "Contact description"
        },
        "email": {
          "type": "string",
          "description": "Contact email"
        },
        "phone": {
          "type": "string",
          "description": "Contact phone"
        }
      },
      "additionalProperties": false
    },
    "groups_counters_group": {
      "type": "object",
      "properties": {
        "photos": {
          "type": "integer",
          "description": "Photos number"
        },
        "albums": {
          "type": "integer",
          "description": "Photo albums number"
        },
        "topics": {
          "type": "integer",
          "description": "Topics number"
        },
        "videos": {
          "type": "integer",
          "description": "Videos number"
        },
        "audios": {
          "type": "integer",
          "description": "Audios number"
        },
        "docs": {
          "type": "integer",
          "description": "Docs number"
        },
        "market": {
          "type": "integer",
          "description": "Market items number"
        }
      }
    },
    "groups_cover": {
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Information whether cover is enabled",
          "$ref": "#/definitions/base_bool_int"
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/base_image"
          }
        }
      },
      "required": [
        "enabled"
      ],
      "additionalProperties": false
    },
    "groups_group_ban_info": {
      "type": "object",
      "properties": {
        "end_date": {
          "type": "integer",
          "description": "End date of ban in Unixtime"
        },
        "comment": {
          "type": "string",
          "description": "Ban comment"
        }
      },
      "additionalProperties": false
    },
    "groups_group_is_closed": {
      "type": "integer",
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "open",
        "closed",
        "private"
      ],
      "description": "Information whether community is closed"
    },
    "groups_group_type": {
      "type": "string",
      "description": "Community type",
      "enum": [
        "group",
        "page",
        "event"
      ]
    },
    "groups_group_admin_level": {
      "type": "integer",
      "description": "Level of current user's credentials as manager",
      "enum": [
        1,
        2,
        3
      ],
      "enumNames": [
        "moderator",
        "editor",
        "administrator"
      ]
    },
    "groups_group": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Community ID"
        },
        "name": {
          "type": "string",
          "description": "Community name"
        },
        "screen_name": {
          "type": "string",
          "description": "Domain of the community page"
        },
        "deactivated": {
          "type": "string",
          "description": "Information whether community is banned"
        },
        "is_closed": {
          "$ref": "#/definitions/groups_group_is_closed"
        },
        "type": {
          "$ref": "#/definitions/groups_group_type"
        },
        "is_admin": {
          "description": "Information whether current user is administrator",
          "$ref": "#/definitions/base_bool_int"
        },
        "admin_level": {
          "$ref": "#/definitions/groups_group_admin_level"
        },
        "is_member": {
          "description": "Information whether current user is member",
          "$ref": "#/definitions/base_bool_int"
        },
        "photo_50": {
          "type": "string",
          "description": "URL of square photo of the community with 50 pixels in width"
        },
        "photo_100": {
          "type": "string",
          "description": "URL of square photo of the community with 100 pixels in width"
        },
        "photo_200": {
          "type": "string",
          "description": "URL of square photo of the community with 200 pixels in width"
        }
      }
    },
    "groups_group_full_member_status": {
      "type": "integer",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5
      ],
      "enumNames": [
        "not a member",
        "member",
        "not sure",
        "declined",
        "has sent a request",
        "invited"
      ]
    },
    "groups_group_full_main_section": {
      "type": "integer",
      "description": "Main section of community",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5
      ],
      "enumNames": [
        "absent",
        "photos",
        "topics",
        "audio",
        "video",
        "market"
      ]
    },
    "groups_group_full_age_limits": {
      "type": "integer",
      "enum": [
        1,
        2,
        3
      ],
      "enumNames": [
        "no",
        "over 16",
        "over 18"
      ]
    },
    "groups_group_full": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/groups_group"
        },
        {
          "properties": {
            "market": {
              "$ref": "#/definitions/groups_market_info"
            },
            "member_status": {
              "$ref": "#/definitions/groups_group_full_member_status",
              "description": "Current user's member status"
            },
            "is_favorite": {
              "description": "Information whether community is in faves",
              "$ref": "#/definitions/base_bool_int"
            },
            "is_subscribed": {
              "description": "Information whether current user is subscribed",
              "$ref": "#/definitions/base_bool_int"
            },
            "city": {
              "$ref": "#/definitions/base_object"
            },
            "country": {
              "$ref": "#/definitions/base_country"
            },
            "verified": {
              "description": "Information whether community is verified",
              "$ref": "#/definitions/base_bool_int"
            },
            "description": {
              "type": "string",
              "description": "Community description"
            },
            "wiki_page": {
              "type": "string",
              "description": "Community's main wiki page title"
            },
            "members_count": {
              "type": "integer",
              "description": "Community members number"
            },
            "counters": {
              "$ref": "#/definitions/groups_counters_group"
            },
            "cover": {
              "$ref": "#/definitions/groups_cover"
            },
            "can_post": {
              "description": "Information whether current user can post on community's wall",
              "$ref": "#/definitions/base_bool_int"
            },
            "can_see_all_posts": {
              "description": "Information whether current user can see all posts on community's wall",
              "$ref": "#/definitions/base_bool_int"
            },
            "activity": {
              "type": "string",
              "description": "Type of group, start date of event or category of public page"
            },
            "fixed_post": {
              "type": "integer",
              "description": "Fixed post ID"
            },
            "can_create_topic": {
              "description": "Information whether current user can create topic",
              "$ref": "#/definitions/base_bool_int"
            },
            "can_upload_video": {
              "description": "Information whether current user can upload video",
              "$ref": "#/definitions/base_bool_int"
            },
            "has_photo": {
              "description": "Information whether community has photo",
              "$ref": "#/definitions/base_bool_int"
            },
            "status": {
              "type": "string",
              "description": "Community status"
            },
            "main_album_id": {
              "type": "integer",
              "description": "Community's main photo album ID"
            },
            "links": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/groups_links_item"
              }
            },
            "contacts": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/groups_contacts_item"
              }
            },
            "site": {
              "type": "string",
              "description": "Community's website"
            },
            "main_section": {
              "$ref": "#/definitions/groups_group_full_main_section"
            },
            "trending": {
              "$ref": "#/definitions/base_bool_int",
              "description": "Information whether the community has a \"fire\" pictogram."
            },
            "can_message": {
              "description": "Information whether current user can send a message to community",
              "$ref": "#/definitions/base_bool_int"
            },
            "is_messages_blocked": {
              "description": "Information whether community can send a message to current user",
              "$ref": "#/definitions/base_bool_int"
            },
            "online_status": {
              "$ref": "#/definitions/groups_online_status",
              "description": "Status of replies in community messages"
            },
            "start_date": {
              "type": "integer",
              "description": "Start date of event in Unixtime"
            },
            "finish_date": {
              "type": "integer",
              "description": "Finish date of event in Unixtime"
            },
            "age_limits": {
              "$ref": "#/definitions/groups_group_full_age_limits",
              "description": "Information whether age limit"
            },
            "ban_info": {
              "$ref": "#/definitions/groups_group_ban_info",
              "description": "User ban info"
            }
          }
        }
      ]
    },
    "groups_group_xtr_invited_by_type": {
      "type": "string",
      "description": "Community type",
      "enum": [
        "group",
        "page",
        "event"
      ]
    },
    "groups_group_xtr_invited_by_admin_level": {
      "type": "integer",
      "description": "Level of current user's credentials as manager",
      "enum": [
        1,
        2,
        3
      ],
      "enumNames": [
        "moderator",
        "editor",
        "administrator"
      ]
    },
    "groups_group_xtr_invited_by": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Community ID"
        },
        "name": {
          "type": "string",
          "description": "Community name"
        },
        "screen_name": {
          "type": "string",
          "description": "Domain of the community page"
        },
        "is_closed": {
          "description": "Information whether community is closed",
          "$ref": "#/definitions/base_bool_int"
        },
        "type": {
          "$ref": "#/definitions/groups_group_xtr_invited_by_type"
        },
        "is_admin": {
          "description": "Information whether current user is manager",
          "$ref": "#/definitions/base_bool_int"
        },
        "admin_level": {
          "$ref": "#/definitions/groups_group_xtr_invited_by_admin_level"
        },
        "is_member": {
          "description": "Information whether current user is member",
          "$ref": "#/definitions/base_bool_int"
        },
        "photo_50": {
          "type": "string",
          "description": "URL of square photo of the community with 50 pixels in width"
        },
        "photo_100": {
          "type": "string",
          "description": "URL of square photo of the community with 100 pixels in width"
        },
        "photo_200": {
          "type": "string",
          "description": "URL of square photo of the community with 200 pixels in width"
        },
        "invited_by": {
          "type": "integer",
          "description": "Inviter ID",
          "minimum": 1
        }
      },
      "additionalProperties": false
    },
    "groups_group_link": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Link ID"
        },
        "url": {
          "type": "string",
          "description": "Link URL"
        },
        "edit_title": {
          "description": "Information whether the title can be edited",
          "$ref": "#/definitions/base_bool_int"
        },
        "desc": {
          "type": "string",
          "description": "Link description"
        },
        "image_processing": {
          "description": "Information whether the image on processing",
          "$ref": "#/definitions/base_bool_int"
        }
      },
      "additionalProperties": false
    },
    "groups_links_item": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Link ID"
        },
        "url": {
          "type": "string",
          "description": "Link URL"
        },
        "edit_title": {
          "description": "Information whether the link title can be edited",
          "$ref": "#/definitions/base_bool_int"
        },
        "name": {
          "type": "string",
          "description": "Link title"
        },
        "desc": {
          "type": "string",
          "description": "Link description"
        },
        "photo_50": {
          "type": "string",
          "description": "URL of square image of the link with 50 pixels in width"
        },
        "photo_100": {
          "type": "string",
          "description": "URL of square image of the link with 100 pixels in width"
        }
      }
    },
    "groups_market_info": {
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Information whether the market is enabled",
          "$ref": "#/definitions/base_bool_int"
        },
        "price_min": {
          "type": "integer",
          "description": "Minimum price"
        },
        "price_max": {
          "type": "integer",
          "description": "Maximum price"
        },
        "main_album_id": {
          "type": "integer",
          "description": "Main market album ID"
        },
        "contact_id": {
          "type": "integer",
          "description": "Contact person ID"
        },
        "currency": {
          "$ref": "#/definitions/market_currency"
        },
        "currency_text": {
          "type": "string",
          "description": "Currency name"
        }
      }
    },
    "groups_member_role_status": {
      "type": "string",
      "description": "User's credentials as community admin",
      "enum": [
        "moderator",
        "editor",
        "administrator",
        "creator"
      ]
    },
    "groups_member_role": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "User ID"
        },
        "role": {
          "$ref": "#/definitions/groups_member_role_status"
        }
      }
    },
    "groups_member_status": {
      "type": "object",
      "properties": {
        "member": {
          "description": "Information whether user is a member of the group",
          "$ref": "#/definitions/base_bool_int"
        },
        "user_id": {
          "type": "integer",
          "description": "User ID",
          "minimum": 1
        }
      },
      "required": [
        "member",
        "user_id"
      ],
      "additionalProperties": false
    },
    "groups_member_status_full": {
      "type": "object",
      "properties": {
        "member": {
          "description": "Information whether user is a member of the group",
          "$ref": "#/definitions/base_bool_int"
        },
        "user_id": {
          "type": "integer",
          "description": "User ID",
          "minimum": 1
        },
        "invitation": {
          "description": "Information whether user has been invited to the group",
          "$ref": "#/definitions/base_bool_int"
        },
        "request": {
          "description": "Information whether user has send request to the group",
          "$ref": "#/definitions/base_bool_int"
        }
      },
      "required": [
        "member",
        "user_id"
      ],
      "additionalProperties": false
    },
    "groups_group_category_type": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "groups_group_public_category_list": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "subtypes_list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/groups_group_category_type"
          }
        }
      }
    },
    "groups_group_settings": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "Community title"
        },
        "description": {
          "type": "string",
          "description": "Community description"
        },
        "address": {
          "type": "string",
          "description": "Community's page domain"
        },
        "place": {
          "$ref": "#/definitions/places_place_min"
        },
        "wall": {
          "type": "integer",
          "description": "Wall settings"
        },
        "photos": {
          "type": "integer",
          "description": "Photos settings"
        },
        "video": {
          "type": "integer",
          "description": "Video settings"
        },
        "audio": {
          "type": "integer",
          "description": "Audio settings"
        },
        "docs": {
          "type": "integer",
          "description": "Docs settings"
        },
        "topics": {
          "type": "integer",
          "description": "Topics settings"
        },
        "wiki": {
          "type": "integer",
          "description": "Wiki settings"
        },
        "obscene_filter": {
          "description": "Information whether the obscene filter is enabled",
          "$ref": "#/definitions/base_bool_int"
        },
        "public_category": {
          "type": "integer",
          "description": "Information about the group category"
        },
        "public_subcategory": {
          "type": "integer",
          "description": "Information about the group subcategory"
        },
        "public_category_list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/groups_group_public_category_list"
          }
        },
        "obscene_stopwords": {
          "description": "Information whether the stopwords filter is enabled",
          "$ref": "#/definitions/base_bool_int"
        },
        "obscene_words": {
          "type": "string",
          "description": "The list of stop words"
        },
        "access": {
          "type": "integer",
          "description": "Community access settings"
        },
        "subject": {
          "type": "integer",
          "description": "Community subject ID"
        },
        "subject_list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/groups_subject_item"
          }
        },
        "rss": {
          "type": "string",
          "description": "URL of the RSS feed"
        },
        "website": {
          "type": "string",
          "description": "Community website"
        }
      }
    },
    "groups_subject_item": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Subject ID"
        },
        "name": {
          "type": "string",
          "description": "Subject title"
        }
      }
    },
    "groups_owner_xtr_ban_info_type": {
      "type": "string",
      "description": "Owner type",
      "enum": [
        "group",
        "profile"
      ]
    },
    "groups_owner_xtr_ban_info": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/groups_owner_xtr_ban_info_type"
        },
        "group": {
          "$ref": "#/definitions/groups_group",
          "description": "Information about group if type = group"
        },
        "profile": {
          "$ref": "#/definitions/users_user",
          "description": "Information about group if type = profile"
        },
        "ban_info": {
          "$ref": "#/definitions/groups_ban_info"
        }
      }
    },
    "groups_role_options": {
      "type": "string",
      "description": "User's credentials as community admin",
      "enum": [
        "moderator",
        "editor",
        "administrator",
        "creator"
      ]
    },
    "groups_user_xtr_role": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/users_user_full"
        },
        {
          "properties": {
            "role": {
              "$ref": "#/definitions/groups_role_options"
            }
          }
        }
      ]
    },
    "groups_token_permission_setting": {
      "type": "object",
      "properties": {
        "setting": {
          "type": "integer",
          "minimum": 0
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "setting",
        "name"
      ],
      "additionalProperties": false
    },
    "groups_token_permissions": {
      "type": "object",
      "properties": {
        "mask": {
          "type": "integer",
          "minimum": 0
        },
        "permissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/groups_token_permission_setting"
          }
        }
      },
      "required": [
        "mask"
      ]
    },
    "groups_long_poll_server": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Long Poll key"
        },
        "server": {
          "type": "string",
          "description": "Long Poll server address"
        },
        "ts": {
          "type": "integer",
          "description": "Number of the last event"
        }
      },
      "required": [
        "key",
        "server",
        "ts"
      ],
      "additionalProperties": false
    },
    "groups_long_poll_settings": {
      "type": "object",
      "properties": {
        "is_enabled": {
          "type": "boolean",
          "description": "Shows whether Long Poll is enabled"
        },
        "api_version": {
          "type": "string",
          "description": "API version used for the events"
        },
        "events": {
          "$ref": "#/definitions/groups_long_poll_events"
        }
      },
      "required": [
        "is_enabled",
        "events"
      ]
    },
    "groups_callback_settings": {
      "type": "object",
      "properties": {
        "api_version": {
          "type": "string",
          "description": "API version used for the events"
        },
        "events": {
          "$ref": "#/definitions/groups_long_poll_events"
        }
      }
    },
    "groups_long_poll_events": {
      "type": "object",
      "properties": {
        "message_new": {
          "$ref": "#/definitions/base_bool_int"
        },
        "message_reply": {
          "$ref": "#/definitions/base_bool_int"
        },
        "photo_new": {
          "$ref": "#/definitions/base_bool_int"
        },
        "audio_new": {
          "$ref": "#/definitions/base_bool_int"
        },
        "video_new": {
          "$ref": "#/definitions/base_bool_int"
        },
        "wall_reply_new": {
          "$ref": "#/definitions/base_bool_int"
        },
        "wall_reply_edit": {
          "$ref": "#/definitions/base_bool_int"
        },
        "wall_reply_delete": {
          "$ref": "#/definitions/base_bool_int"
        },
        "wall_reply_restore": {
          "$ref": "#/definitions/base_bool_int"
        },
        "wall_post_new": {
          "$ref": "#/definitions/base_bool_int"
        },
        "board_post_new": {
          "$ref": "#/definitions/base_bool_int"
        },
        "board_post_edit": {
          "$ref": "#/definitions/base_bool_int"
        },
        "board_post_restore": {
          "$ref": "#/definitions/base_bool_int"
        },
        "board_post_delete": {
          "$ref": "#/definitions/base_bool_int"
        },
        "photo_comment_new": {
          "$ref": "#/definitions/base_bool_int"
        },
        "photo_comment_edit": {
          "$ref": "#/definitions/base_bool_int"
        },
        "photo_comment_delete": {
          "$ref": "#/definitions/base_bool_int"
        },
        "photo_comment_restore": {
          "$ref": "#/definitions/base_bool_int"
        },
        "video_comment_new": {
          "$ref": "#/definitions/base_bool_int"
        },
        "video_comment_edit": {
          "$ref": "#/definitions/base_bool_int"
        },
        "video_comment_delete": {
          "$ref": "#/definitions/base_bool_int"
        },
        "video_comment_restore": {
          "$ref": "#/definitions/base_bool_int"
        },
        "market_comment_new": {
          "$ref": "#/definitions/base_bool_int"
        },
        "market_comment_edit": {
          "$ref": "#/definitions/base_bool_int"
        },
        "market_comment_delete": {
          "$ref": "#/definitions/base_bool_int"
        },
        "market_comment_restore": {
          "$ref": "#/definitions/base_bool_int"
        },
        "poll_vote_new": {
          "$ref": "#/definitions/base_bool_int"
        },
        "group_join": {
          "$ref": "#/definitions/base_bool_int"
        },
        "group_leave": {
          "$ref": "#/definitions/base_bool_int"
        },
        "group_change_settings": {
          "$ref": "#/definitions/base_bool_int"
        },
        "group_change_photo": {
          "$ref": "#/definitions/base_bool_int"
        },
        "group_officers_edit": {
          "$ref": "#/definitions/base_bool_int"
        },
        "message_allow": {
          "$ref": "#/definitions/base_bool_int"
        },
        "message_deny": {
          "$ref": "#/definitions/base_bool_int"
        },
        "wall_repost": {
          "$ref": "#/definitions/base_bool_int"
        },
        "user_block": {
          "$ref": "#/definitions/base_bool_int"
        },
        "user_unblock": {
          "$ref": "#/definitions/base_bool_int"
        },
        "messages_edit": {
          "$ref": "#/definitions/base_bool_int"
        },
        "message_typing_state": {
          "$ref": "#/definitions/base_bool_int"
        },
        "lead_forms_new": {
          "$ref": "#/definitions/base_bool_int"
        }
      },
      "required": [
        "message_new",
        "message_reply",
        "photo_new",
        "audio_new",
        "video_new",
        "wall_reply_new",
        "wall_reply_edit",
        "wall_reply_delete",
        "wall_reply_restore",
        "wall_post_new",
        "board_post_new",
        "board_post_edit",
        "board_post_restore",
        "board_post_delete",
        "photo_comment_new",
        "photo_comment_edit",
        "photo_comment_delete",
        "photo_comment_restore",
        "video_comment_new",
        "video_comment_edit",
        "video_comment_delete",
        "video_comment_restore",
        "market_comment_new",
        "market_comment_edit",
        "market_comment_delete",
        "market_comment_restore",
        "poll_vote_new",
        "group_join",
        "group_leave",
        "group_change_settings",
        "group_change_photo",
        "group_officers_edit",
        "message_allow",
        "message_deny",
        "wall_repost",
        "user_block",
        "user_unblock",
        "messages_edit",
        "message_typing_state"
      ]
    },
    "groups_online_status_type": {
      "type": "string",
      "description": "Type of online status of group",
      "enum": [
        "none",
        "online",
        "answer_mark"
      ]
    },
    "groups_online_status": {
      "type": "object",
      "description": "Online status of group",
      "properties": {
        "status": {
          "$ref": "#/definitions/groups_online_status_type"
        },
        "minutes": {
          "type": "integer",
          "description": "Estimated time of answer (for status = answer_mark)"
        }
      },
      "required": [
        "status"
      ],
      "additionalProperties": false
    },
    "leads_lead": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Lead limit"
        },
        "spent": {
          "type": "integer",
          "description": "Amount of spent votes"
        },
        "cost": {
          "type": "integer",
          "description": "Offer cost"
        },
        "impressions": {
          "type": "integer",
          "description": "Impressions number"
        },
        "started": {
          "type": "integer",
          "description": "Started offers number"
        },
        "completed": {
          "type": "integer",
          "description": "Completed offers number"
        },
        "days": {
          "$ref": "#/definitions/leads_lead_days"
        }
      }
    },
    "leads_lead_days": {
      "type": "object",
      "properties": {
        "impressions": {
          "type": "integer",
          "description": "Impressions number"
        },
        "started": {
          "type": "integer",
          "description": "Started offers number"
        },
        "completed": {
          "type": "integer",
          "description": "Completed offers number"
        },
        "spent": {
          "type": "integer",
          "description": "Amount of spent votes"
        }
      }
    },
    "leads_start": {
      "type": "object",
      "properties": {
        "test_mode": {
          "description": "Information whether test mode is enabled",
          "$ref": "#/definitions/base_bool_int"
        },
        "vk_sid": {
          "type": "string",
          "description": "Session data"
        }
      }
    },
    "leads_checked_result": {
      "type": "string",
      "description": "Information whether user can start the lead",
      "enum": [
        "true",
        "false"
      ]
    },
    "leads_checked": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/leads_checked_result"
        },
        "reason": {
          "type": "string",
          "description": "Reason why user can't start the lead"
        },
        "start_link": {
          "type": "string",
          "description": "URL user should open to start the lead"
        },
        "sid": {
          "type": "string",
          "description": "Session ID"
        }
      }
    },
    "leads_complete": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Offer limit"
        },
        "spent": {
          "type": "integer",
          "description": "Amount of spent votes"
        },
        "cost": {
          "type": "integer",
          "description": "Offer cost"
        },
        "test_mode": {
          "description": "Information whether test mode is enabled",
          "$ref": "#/definitions/base_bool_int"
        },
        "success": {
          "$ref": "#/definitions/base_ok_response"
        }
      }
    },
    "leads_entry": {
      "type": "object",
      "properties": {
        "uid": {
          "type": "integer",
          "description": "User ID"
        },
        "aid": {
          "type": "integer",
          "description": "Application ID"
        },
        "sid": {
          "type": "string",
          "description": "Session string ID"
        },
        "date": {
          "type": "integer",
          "description": "Date when the action has been started in Unixtime"
        },
        "status": {
          "type": "integer",
          "description": "Action type"
        },
        "test_mode": {
          "description": "Information whether test mode is enabled",
          "$ref": "#/definitions/base_bool_int"
        },
        "start_date": {
          "type": "integer",
          "description": "Start date in Unixtime (for status=2)"
        },
        "comment": {
          "type": "string",
          "description": "Comment text"
        }
      }
    },
    "market_market_album": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Market album ID",
          "minimum": 1
        },
        "owner_id": {
          "type": "integer",
          "description": "Market album owner's ID"
        },
        "title": {
          "type": "string",
          "description": "Market album title"
        },
        "count": {
          "type": "integer",
          "description": "Items number",
          "minimum": 0
        },
        "updated_time": {
          "type": "integer",
          "description": "Date when album has been updated last time in Unixtime",
          "minimum": 0
        },
        "photo": {
          "$ref": "#/definitions/photos_photo"
        }
      },
      "required": [
        "id",
        "owner_id",
        "title",
        "count",
        "updated_time"
      ],
      "additionalProperties": false
    },
    "market_market_category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Category ID"
        },
        "name": {
          "type": "string",
          "description": "Category name"
        },
        "section": {
          "$ref": "#/definitions/market_section"
        }
      },
      "required": [
        "id",
        "name",
        "section"
      ],
      "additionalProperties": false
    },
    "market_currency": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Currency ID",
          "minimum": 0
        },
        "name": {
          "type": "string",
          "description": "Currency sign"
        }
      },
      "required": [
        "id",
        "name"
      ],
      "additionalProperties": false
    },
    "market_market_item_availability": {
      "type": "integer",
      "description": "Information whether the item is available",
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "available",
        "removed",
        "unavailable"
      ]
    },
    "market_market_item": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Item ID",
          "minimum": 0
        },
        "owner_id": {
          "type": "integer",
          "description": "Item owner's ID"
        },
        "title": {
          "type": "string",
          "description": "Item title"
        },
        "description": {
          "type": "string",
          "description": "Item description"
        },
        "price": {
          "$ref": "#/definitions/market_price"
        },
        "category": {
          "$ref": "#/definitions/market_market_category"
        },
        "date": {
          "type": "integer",
          "description": "Date when the item has been created in Unixtime",
          "minimum": 0
        },
        "thumb_photo": {
          "type": "string",
          "description": "URL of the preview image"
        },
        "availability": {
          "$ref": "#/definitions/market_market_item_availability"
        }
      },
      "required": [
        "id",
        "owner_id",
        "title",
        "description",
        "price",
        "category",
        "date",
        "thumb_photo",
        "availability"
      ],
      "additionalProperties": false
    },
    "market_market_item_full": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/market_market_item"
        },
        {
          "properties": {
            "photos": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/photos_photo"
              }
            },
            "can_comment": {
              "description": "Information whether current use can comment the item",
              "$ref": "#/definitions/base_bool_int"
            },
            "can_repost": {
              "description": "Information whether current use can repost the item",
              "$ref": "#/definitions/base_bool_int"
            },
            "likes": {
              "$ref": "#/definitions/base_likes"
            },
            "views_count": {
              "type": "integer",
              "description": "Views number"
            }
          }
        }
      ]
    },
    "market_price": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "string",
          "description": "Amount"
        },
        "currency": {
          "$ref": "#/definitions/market_currency"
        },
        "text": {
          "type": "string",
          "description": "Text"
        }
      }
    },
    "market_section": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Section ID",
          "minimum": 0
        },
        "name": {
          "type": "string",
          "description": "Section name"
        }
      },
      "required": [
        "id",
        "name"
      ],
      "additionalProperties": false
    },
    "messages_history_attachment": {
      "type": "object",
      "properties": {
        "message_id": {
          "type": "integer",
          "description": "Message ID"
        },
        "attachment": {
          "$ref": "#/definitions/messages_history_message_attachment"
        }
      },
      "required": [
        "attachment"
      ]
    },
    "messages_history_message_attachment_type": {
      "type": "string",
      "description": "Attachments type",
      "enum": [
        "photo",
        "video",
        "audio",
        "doc",
        "link",
        "market",
        "wall",
        "share"
      ]
    },
    "messages_history_message_attachment": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/messages_history_message_attachment_type"
        },
        "photo": {
          "$ref": "#/definitions/photos_photo"
        },
        "video": {
          "$ref": "#/definitions/video_video"
        },
        "audio": {
          "$ref": "#/definitions/audio_audio_full"
        },
        "doc": {
          "$ref": "#/definitions/docs_doc"
        },
        "link": {
          "$ref": "#/definitions/base_link"
        },
        "market": {
          "$ref": "#/definitions/base_link"
        },
        "wall": {
          "$ref": "#/definitions/base_link"
        },
        "share": {
          "$ref": "#/definitions/base_link"
        }
      },
      "required": [
        "type"
      ]
    },
    "messages_message_attachment_type": {
      "type": "string",
      "description": "Attachment type",
      "enum": [
        "photo",
        "audio",
        "video",
        "doc",
        "link",
        "market",
        "market_market_album",
        "gift",
        "sticker",
        "wall",
        "wall_reply"
      ]
    },
    "messages_message_attachment": {
      "type": "object",
      "properties": {
        "photo": {
          "$ref": "#/definitions/photos_photo"
        },
        "audio": {
          "$ref": "#/definitions/audio_audio_full"
        },
        "video": {
          "$ref": "#/definitions/video_video"
        },
        "doc": {
          "$ref": "#/definitions/docs_doc"
        },
        "link": {
          "$ref": "#/definitions/base_link"
        },
        "market": {
          "$ref": "#/definitions/market_market_item"
        },
        "market_market_album": {
          "$ref": "#/definitions/market_market_album"
        },
        "gift": {
          "$ref": "#/definitions/gifts_layout"
        },
        "sticker": {
          "$ref": "#/definitions/base_sticker"
        },
        "wall": {
          "$ref": "#/definitions/wall_wallpost_attached"
        },
        "wall_reply": {
          "$ref": "#/definitions/wall_wall_comment"
        },
        "type": {
          "$ref": "#/definitions/messages_message_attachment_type"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": false
    },
    "messages_chat": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Chat ID"
        },
        "type": {
          "type": "string",
          "description": "Chat type"
        },
        "title": {
          "type": "string",
          "description": "Chat title"
        },
        "admin_id": {
          "type": "integer",
          "description": "Chat creator ID"
        },
        "users": {
          "type": "array",
          "items": {
            "type": "integer",
            "description": "User ID"
          }
        },
        "push_settings": {
          "$ref": "#/definitions/messages_chat_push_settings"
        },
        "photo_50": {
          "type": "string",
          "description": "URL of the preview image with 50 px in width"
        },
        "photo_100": {
          "type": "string",
          "description": "URL of the preview image with 100 px in width"
        },
        "photo_200": {
          "type": "string",
          "description": "URL of the preview image with 200 px in width"
        },
        "left": {
          "description": "Shows that user has been left the chat",
          "$ref": "#/definitions/base_bool_int"
        },
        "kicked": {
          "description": "Shows that user has been kicked from the chat",
          "$ref": "#/definitions/base_bool_int"
        }
      },
      "required": [
        "id",
        "type",
        "admin_id",
        "users"
      ],
      "additionalProperties": false
    },
    "messages_chat_full": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Chat ID"
        },
        "type": {
          "type": "string",
          "description": "Chat type"
        },
        "title": {
          "type": "string",
          "description": "Chat title"
        },
        "admin_id": {
          "type": "integer",
          "description": "Chat creator ID"
        },
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/messages_user_xtr_invited_by"
          }
        },
        "push_settings": {
          "$ref": "#/definitions/messages_chat_push_settings"
        },
        "photo_50": {
          "type": "string",
          "description": "URL of the preview image with 50 px in width"
        },
        "photo_100": {
          "type": "string",
          "description": "URL of the preview image with 100 px in width"
        },
        "photo_200": {
          "type": "string",
          "description": "URL of the preview image with 200 px in width"
        },
        "left": {
          "description": "Shows that user has been left the chat",
          "$ref": "#/definitions/base_bool_int"
        },
        "kicked": {
          "description": "Shows that user has been kicked from the chat",
          "$ref": "#/definitions/base_bool_int"
        }
      },
      "required": [
        "id",
        "type",
        "admin_id",
        "users"
      ],
      "additionalProperties": false
    },
    "messages_chat_push_settings": {
      "type": "object",
      "properties": {
        "sound": {
          "description": "Information whether the sound is on",
          "$ref": "#/definitions/base_bool_int"
        },
        "disabled_until": {
          "type": "integer",
          "description": "Time until that notifications are disabled"
        }
      }
    },
    "messages_dialog": {
      "type": "object",
      "properties": {
        "unread": {
          "type": "integer",
          "description": "Information whether unread messages are in the dialog"
        },
        "message": {
          "$ref": "#/definitions/messages_message"
        },
        "in_read": {
          "type": "integer",
          "description": "ID of the last message read by current user"
        },
        "out_read": {
          "type": "integer",
          "description": "ID of the last message read by the others"
        },
        "important": {
          "description": "Is it an important dialog",
          "$ref": "#/definitions/base_bool_int"
        },
        "unanswered": {
          "description": "Is it an unanswered dialog",
          "$ref": "#/definitions/base_bool_int"
        }
      }
    },
    "messages_last_activity": {
      "type": "object",
      "properties": {
        "online": {
          "description": "Information whether user is online",
          "$ref": "#/definitions/base_bool_int"
        },
        "time": {
          "type": "integer",
          "description": "Time when user was online in Unixtime"
        }
      },
      "required": [
        "online",
        "time"
      ],
      "additionalProperties": false
    },
    "messages_longpoll_params": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Key"
        },
        "server": {
          "type": "string",
          "description": "Server URL"
        },
        "ts": {
          "type": "integer",
          "description": "Timestamp"
        },
        "pts": {
          "type": "integer",
          "description": "Persistent timestamp"
        }
      }
    },
    "messages_longpoll_messages": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Total number"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/messages_message"
          }
        }
      }
    },
    "messages_keyboard_button_action": {
      "description": "Description of the action, that should be performed on button click",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Button type",
          "enum": [
            "text",
            "start"
          ]
        },
        "payload": {
          "type": "string",
          "description": "Additional data sent along with message for developer convenience"
        },
        "label": {
          "type": "string",
          "description": "Label for button"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": false
    },
    "messages_keyboard_button": {
      "type": "object",
      "properties": {
        "color": {
          "type": "string",
          "enum": [
            "default",
            "positive",
            "negative",
            "primary"
          ],
          "description": "Button color"
        },
        "action": {
          "$ref": "#/definitions/messages_keyboard_button_action"
        }
      },
      "required": [
        "color",
        "action"
      ]
    },
    "messages_keyboard": {
      "type": "object",
      "properties": {
        "one_time": {
          "type": "boolean",
          "description": "Should this keyboard disappear on first use"
        },
        "author_id": {
          "type": "integer",
          "description": "Community or bot, which set this keyboard"
        },
        "buttons": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/messages_keyboard_button"
            }
          }
        }
      },
      "required": [
        "one_time",
        "buttons"
      ]
    },
    "messages_message_action_status": {
      "type": "string",
      "description": "Action status",
      "enum": [
        "chat_photo_update",
        "chat_photo_remove",
        "chat_create",
        "chat_title_update",
        "chat_invite_user",
        "chat_kick_user",
        "chat_pin_message",
        "chat_unpin_message",
        "chat_invite_user_by_link"
      ]
    },
    "messages_message": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Message ID"
        },
        "conversation_message_id": {
          "type": "integer",
          "description": "Unique auto-incremented number for all messages with this peer"
        },
        "date": {
          "type": "integer",
          "description": "Date when the message has been sent in Unixtime"
        },
        "peer_id": {
          "type": "integer",
          "description": "Peer ID"
        },
        "from_id": {
          "type": "integer",
          "description": "Message author's ID"
        },
        "update_time": {
          "type": "integer",
          "description": "Date when the message has been updated in Unixtime"
        },
        "random_id": {
          "type": "integer",
          "description": "ID used for sending messages. It returned only for outgoing messages"
        },
        "important": {
          "type": "boolean",
          "description": "Is it an important message"
        },
        "payload": {
          "type": "string"
        },
        "fwd_messages": {
          "description": "Forwarded messages",
          "type": "array",
          "items": {
            "$ref": "#/definitions/messages_fwd_message"
          }
        },
        "text": {
          "type": "string",
          "description": "Message text"
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/messages_message_attachment"
          }
        },
        "geo": {
          "$ref": "#/definitions/base_geo"
        },
        "action": {
          "$ref": "#/definitions/messages_message_action"
        },
        "keyboard": {
          "$ref": "#/definitions/messages_keyboard"
        }
      },
      "required": [
        "date",
        "from_id",
        "id",
        "peer_id",
        "text"
      ]
    },
    "messages_pinned_message": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Message ID"
        },
        "conversation_message_id": {
          "type": "integer",
          "description": "Unique auto-incremented number for all messages with this peer"
        },
        "date": {
          "type": "integer",
          "description": "Date when the message has been sent in Unixtime"
        },
        "peer_id": {
          "type": "integer",
          "description": "Peer ID"
        },
        "from_id": {
          "type": "integer",
          "description": "Message author's ID"
        },
        "fwd_messages": {
          "description": "Forwarded messages",
          "type": "array",
          "items": {
            "$ref": "#/definitions/messages_fwd_message"
          }
        },
        "text": {
          "type": "string",
          "description": "Message text"
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/messages_message_attachment"
          }
        },
        "geo": {
          "$ref": "#/definitions/base_geo"
        }
      },
      "required": [
        "id",
        "date",
        "from_id",
        "peer_id",
        "text"
      ]
		},
		"messages_fwd_message": {
      "type": "object",
      "properties": {
        "date": {
          "type": "integer",
          "description": "Date when the message has been sent in Unixtime"
        },
        "from_id": {
          "type": "integer",
          "description": "Message author's ID"
        },
        "update_time": {
          "type": "integer",
          "description": "Date when the message has been updated in Unixtime"
        },
        "fwd_messages": {
          "description": "Forwarded messages",
          "type": "array",
          "items": {
            "$ref": "#/definitions/messages_fwd_message"
          }
        },
        "text": {
          "type": "string",
          "description": "Message text"
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/messages_message_attachment"
          }
        }
      }
    },
    "messages_message_action": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/messages_message_action_status"
        },
        "member_id": {
          "type": "integer",
          "description": "User or email peer ID"
        },
        "message": {
          "type": "string",
          "description": "Message body of related message"
        },
        "text": {
          "type": "string",
          "description": "New chat title for chat_create and chat_title_update actions"
        },
        "conversation_message_id": {
          "type": "integer",
          "description": "Message ID"
        },
        "email": {
          "type": "string",
          "description": "Email address for chat_invite_user or chat_kick_user actions"
        },
        "photo": {
          "$ref": "#/definitions/messages_message_action_photo"
        }
      },
      "required": [
        "type"
      ]
		},
		"messages_message_action_photo": {
			"type": "object",
      "properties": {
				"photo_50": {
					"type": "string",
					"description": "Image URL 50x50px"
				},
				"photo_100": {
					"type": "string",
					"description": "Image URL 100x100px"
				},
				"photo_200": {
					"type": "string",
					"description": "Image URL 200x200px"
				}
			}
		},
    "messages_conversation_with_message": {
      "type": "object",
      "properties": {
        "conversation": {
          "$ref": "#/definitions/messages_conversation"
        },
        "last_message": {
          "$ref": "#/definitions/messages_message"
        }
      }
    },
    "messages_conversation_member": {
      "type": "object",
      "properties": {
        "member_id": {
					"type": "integer",
					"description": "Conversation participant id"
        },
        "invited_by": {
					"type": "integer",
					"description": "ID of the user who invited the member"
        },
        "join_date": {
					"type": "integer",
					"description": "Date added to conversation"
        },
        "is_admin": {
					"type": "boolean",
					"description": "Is the user an administrator"
        },
        "can_kick": {
					"type": "boolean",
					"description": "Can current user exclude member"
        }
      }
    },
    "messages_chat_settings_photo": {
      "type": "object",
      "properties": {
        "photo_50": {
          "type": "string",
          "description": "URL of the preview image with 50px in width"
        },
        "photo_100": {
          "type": "string",
          "description": "URL of the preview image with 100px in width"
        },
        "photo_200": {
          "type": "string",
          "description": "URL of the preview image with 200px in width"
        }
      }
    },
    "messages_chat_settings_state": {
      "type": "string",
      "enum": [
        "in",
        "kicked",
        "left"
      ]
    },
    "messages_user_xtr_invited_by": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/users_user_xtr_type"
        },
        {
          "properties": {
            "invited_by": {
              "type": "integer",
              "description": "ID of the inviter"
            }
          }
        }
      ]
    },
    "newsfeed_newsfeed_item_type": {
      "type": "string",
      "description": "Item type",
      "enum": [
        "post",
        "photo",
        "photo_tag",
        "wall_photo",
        "friend",
        "note",
        "audio",
        "video",
        "topic"
      ]
    },
    "newsfeed_newsfeed_item": {
      "type": "object",
      "allOf": [
        {
          "oneOf": [
            {
              "$ref": "#/definitions/newsfeed_item_wallpost"
            },
            {
              "$ref": "#/definitions/newsfeed_item_photo"
            },
            {
              "$ref": "#/definitions/newsfeed_item_photo_tag"
            },
            {
              "$ref": "#/definitions/newsfeed_item_friend"
            },
            {
              "$ref": "#/definitions/newsfeed_item_note"
            },
            {
              "$ref": "#/definitions/newsfeed_item_audio"
            },
            {
              "$ref": "#/definitions/newsfeed_item_video"
            },
            {
              "$ref": "#/definitions/newsfeed_item_topic"
            }
          ]
        },
        {
          "properties": {
            "type": {
              "$ref": "#/definitions/newsfeed_newsfeed_item_type"
            },
            "source_id": {
              "type": "integer",
              "description": "Item source ID"
            },
            "date": {
              "type": "integer",
              "description": "Date when item has been added in Unixtime"
            }
          }
        }
      ]
    },
    "newsfeed_item_audio": {
      "type": "object",
      "properties": {
        "audio": {
          "$ref": "#/definitions/newsfeed_item_audio_audio"
        },
        "post_id": {
          "type": "integer",
          "description": "Post ID"
        }
      }
    },
    "newsfeed_item_audio_audio": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Audios number"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/audio_audio_full"
          }
        }
      }
    },
    "newsfeed_item_friend_friends": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Number of friends has been added"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/base_user_id"
          }
        }
      }
    },
    "newsfeed_item_friend": {
      "type": "object",
      "properties": {
        "friends": {
          "$ref": "#/definitions/newsfeed_item_friend_friends"
        }
      }
    },
    "newsfeed_item_note": {
      "type": "object",
      "properties": {
        "notes": {
          "$ref": "#/definitions/newsfeed_item_note_notes"
        }
      }
    },
    "newsfeed_item_note_notes": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Notes number"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/newsfeed_newsfeed_note"
          }
        }
      }
    },
    "newsfeed_item_photo": {
      "type": "object",
      "properties": {
        "photos": {
          "$ref": "#/definitions/newsfeed_item_photo_photos"
        },
        "post_id": {
          "type": "integer",
          "description": "Post ID"
        }
      }
    },
    "newsfeed_item_photo_photos": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Photos number"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/newsfeed_newsfeed_photo"
          }
        }
      }
    },
    "newsfeed_item_photo_tag": {
      "type": "object",
      "properties": {
        "photo_tags": {
          "$ref": "#/definitions/newsfeed_item_photo_tag_photo_tags"
        },
        "post_id": {
          "type": "integer",
          "description": "Post ID"
        }
      }
    },
    "newsfeed_item_photo_tag_photo_tags": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Tags number"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/newsfeed_newsfeed_photo"
          }
        }
      }
    },
    "newsfeed_item_topic": {
      "type": "object",
      "properties": {
        "post_id": {
          "type": "integer",
          "description": "Topic post ID"
        },
        "text": {
          "type": "string",
          "description": "Post text"
        },
        "comments": {
          "$ref": "#/definitions/base_comments_info"
        },
        "likes": {
          "$ref": "#/definitions/base_likes_info"
        }
      },
      "required": [
        "post_id",
        "text"
      ],
      "additionalProperties": false
    },
    "newsfeed_item_video": {
      "type": "object",
      "properties": {
        "video": {
          "$ref": "#/definitions/newsfeed_item_video_video"
        }
      }
    },
    "newsfeed_item_video_video": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Tags number"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/video_video"
          }
        }
      }
    },
    "newsfeed_item_wallpost_type": {
      "type": "string",
      "description": "Post type",
      "enum": [
        "post",
        "copy",
        "reply"
      ]
    },
    "newsfeed_item_wallpost": {
      "type": "object",
      "properties": {
        "post_id": {
          "type": "integer",
          "description": "Post ID"
        },
        "post_type": {
          "$ref": "#/definitions/newsfeed_item_wallpost_type"
        },
        "text": {
          "type": "string",
          "description": "Post text"
        },
        "copy_history": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/wall_wallpost"
          }
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/wall_wallpost_attachment"
          }
        },
        "geo": {
          "$ref": "#/definitions/base_geo"
        },
        "post_source": {
          "$ref": "#/definitions/wall_post_source"
        },
        "comments": {
          "$ref": "#/definitions/base_comments_info"
        },
        "likes": {
          "$ref": "#/definitions/base_likes_info"
        },
        "reposts": {
          "$ref": "#/definitions/base_reposts_info"
        }
      }
    },
    "newsfeed_list": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "List ID"
        },
        "title": {
          "type": "string",
          "description": "List title"
        }
      },
      "required": [
        "id",
        "title"
      ],
      "additionalProperties": false
    },
    "newsfeed_list_full": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/newsfeed_list"
        },
        {
          "properties": {
            "no_reposts": {
              "description": "Information whether reposts hiding is enabled",
              "$ref": "#/definitions/base_bool_int"
            },
            "source_ids": {
              "type": "array",
              "items": {
                "type": "integer",
                "description": "Users and communities IDs"
              }
            }
          }
        }
      ]
    },
    "newsfeed_newsfeed_note": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Note ID"
        },
        "owner_id": {
          "type": "integer",
          "description": "integer"
        },
        "title": {
          "type": "string",
          "description": "Note title"
        },
        "comments": {
          "type": "integer",
          "description": "Comments Number"
        }
      }
    },
    "newsfeed_newsfeed_photo": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/photos_photo"
        },
        {
          "properties": {
            "likes": {
              "$ref": "#/definitions/base_likes"
            },
            "comments": {
              "$ref": "#/definitions/base_object_count"
            },
            "can_comment": {
              "description": "Information whether current user can comment the photo",
              "$ref": "#/definitions/base_bool_int"
            },
            "can_repost": {
              "description": "Information whether current user can repost the photo",
              "$ref": "#/definitions/base_bool_int"
            }
          }
        }
      ]
    },
    "notes_note_comment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Comment ID"
        },
        "uid": {
          "type": "integer",
          "description": "Comment author's ID"
        },
        "nid": {
          "type": "integer",
          "description": "Note ID"
        },
        "oid": {
          "type": "integer",
          "description": "Note ID"
        },
        "date": {
          "type": "integer",
          "description": "Date when the comment has beed added in Unixtime"
        },
        "message": {
          "type": "string",
          "description": "Comment text"
        },
        "reply_to": {
          "type": "integer",
          "description": "ID of replied comment "
        }
      },
      "required": [
        "id",
        "uid",
        "nid",
        "oid",
        "date",
        "message"
      ],
      "additionalProperties": false
    },
    "notes_note": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Note ID",
          "minimum": 1
        },
        "owner_id": {
          "type": "integer",
          "description": "Note owner's ID",
          "minimum": 1
        },
        "comments": {
          "type": "integer",
          "description": "Comments number",
          "minimum": 0
        },
        "can_comment": {
          "description": "Information whether current user can comment the note",
          "$ref": "#/definitions/base_bool_int"
        },
        "date": {
          "type": "integer",
          "description": "Date when the note has been created in Unixtime",
          "minimum": 0
        },
        "title": {
          "type": "string",
          "description": "Note title"
        },
        "text": {
          "type": "string",
          "description": "Note text"
        },
        "text_wiki": {
          "type": "string",
          "description": "Note text in wiki format"
        },
        "view_url": {
          "type": "string",
          "description": "URL of the page with note preview"
        }
      },
      "required": [
        "id",
        "owner_id",
        "comments",
        "date",
        "title",
        "view_url"
      ],
      "additionalProperties": false
    },
    "notifications_notifications_comment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Comment ID",
          "minimum": 1
        },
        "owner_id": {
          "type": "integer",
          "description": "Author ID"
        },
        "date": {
          "type": "integer",
          "description": "Date when the comment has been added in Unixtime",
          "minimum": 0
        },
        "text": {
          "type": "string",
          "description": "Comment text"
        },
        "photo": {
          "$ref": "#/definitions/photos_photo"
        },
        "video": {
          "$ref": "#/definitions/video_video"
        },
        "post": {
          "$ref": "#/definitions/wall_wallpost"
        },
        "topic": {
          "$ref": "#/definitions/board_topic"
        }
      }
    },
    "notifications_notification_parent": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/wall_wallpost_to_id"
        },
        {
          "$ref": "#/definitions/photos_photo"
        },
        {
          "$ref": "#/definitions/board_topic"
        },
        {
          "$ref": "#/definitions/video_video"
        },
        {
          "$ref": "#/definitions/notifications_notifications_comment"
        }
      ]
    },
    "notifications_notification": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Notification type"
        },
        "date": {
          "type": "integer",
          "description": "Date when the event has been occured"
        },
        "parent": {
          "$ref": "#/definitions/notifications_notification_parent"
        },
        "feedback": {
          "$ref": "#/definitions/notifications_feedback"
        },
        "reply": {
          "$ref": "#/definitions/notifications_reply"
        }
      }
    },
    "notifications_feedback": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Item ID"
        },
        "to_id": {
          "type": "integer",
          "description": "Wall owner's ID"
        },
        "from_id": {
          "type": "integer",
          "description": "Reply author's ID"
        },
        "text": {
          "type": "string",
          "description": "Reply text"
        },
        "likes": {
          "$ref": "#/definitions/base_likes_info"
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/wall_wallpost_attachment"
          }
        },
        "geo": {
          "$ref": "#/definitions/base_geo"
        }
      }
    },
    "notifications_reply": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Reply ID"
        },
        "date": {
          "type": "integer",
          "description": "Date when the reply has been created in Unixtime"
        },
        "text": {
          "type": "integer",
          "description": "Reply text"
        }
      }
    },
    "oauth_error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string",
          "description": "Error type"
        },
        "error_description": {
          "type": "string",
          "description": "Error description"
        },
        "redirect_uri": {
          "type": "string",
          "description": "URI for validation"
        }
      },
      "required": [
        "error",
        "error_description"
      ]
    },
    "orders_order": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Order ID"
        },
        "app_order_id": {
          "type": "integer",
          "description": "App order ID"
        },
        "status": {
          "type": "string",
          "description": "Order status"
        },
        "user_id": {
          "type": "integer",
          "description": "User ID"
        },
        "receiver_id": {
          "type": "integer",
          "description": "Receiver ID"
        },
        "item": {
          "type": "string",
          "description": "Order item"
        },
        "amount": {
          "type": "integer",
          "description": "Amount"
        },
        "date": {
          "type": "integer",
          "description": "Date of creation in Unixtime"
        },
        "transaction_id": {
          "type": "integer",
          "description": "Transaction ID"
        },
        "cancel_transaction_id": {
          "type": "integer",
          "description": "Cancel transaction ID"
        }
      }
    },
    "orders_amount": {
      "type": "object",
      "properties": {
        "amounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/orders_amount_item"
          }
        },
        "currency": {
          "type": "string",
          "description": "Currency name"
        }
      }
    },
    "orders_amount_item": {
      "type": "object",
      "properties": {
        "votes": {
          "type": "string",
          "description": "Votes number"
        },
        "amount": {
          "type": "integer",
          "description": "Votes amount in user's currency"
        },
        "description": {
          "type": "string",
          "description": "Amount description"
        }
      }
    },
    "pages_privacy_settings": {
      "type": "integer",
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "community managers only",
        "community members only",
        "everyone"
      ]
    },
    "pages_wikipage": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Page ID",
          "minimum": 1
        },
        "group_id": {
          "type": "integer",
          "description": "Community ID",
          "minimum": 1
        },
        "title": {
          "type": "string",
          "description": "Page title"
        },
        "who_can_view": {
          "description": "View settings of the page",
          "$ref": "#/definitions/pages_privacy_settings"
        },
        "who_can_edit": {
          "description": "Edit settings of the page",
          "$ref": "#/definitions/pages_privacy_settings"
        },
        "views": {
          "type": "integer",
          "description": "Views number"
        },
        "editor_id": {
          "type": "integer",
          "description": "Last editor ID"
        },
        "editor_name": {
          "type": "string",
          "description": "Last editor name"
        },
        "creator_id": {
          "type": "integer",
          "description": "Page creator ID"
        },
        "creator_name": {
          "type": "integer",
          "description": "Page creator name"
        }
      },
      "required": [
        "id",
        "group_id",
        "title",
        "views",
        "who_can_view",
        "who_can_edit"
      ],
      "additionalProperties": false
    },
    "pages_wikipage_full": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Page ID",
          "minimum": 1
        },
        "group_id": {
          "type": "integer",
          "description": "Community ID",
          "minimum": 1
        },
        "title": {
          "type": "string",
          "description": "Page title"
        },
        "current_user_can_edit": {
          "description": "Information whether current user can edit the page",
          "$ref": "#/definitions/base_bool_int"
        },
        "current_user_can_edit_access": {
          "description": "Information whether current user can edit the page access settings",
          "$ref": "#/definitions/base_bool_int"
        },
        "who_can_view": {
          "description": "View settings of the page",
          "$ref": "#/definitions/pages_privacy_settings"
        },
        "who_can_edit": {
          "description": "Edit settings of the page",
          "$ref": "#/definitions/pages_privacy_settings"
        },
        "edited": {
          "type": "integer",
          "description": "Date when the page has been edited in Unixtime"
        },
        "created": {
          "type": "integer",
          "description": "Date when the page has been created in Unixtime"
        },
        "views": {
          "type": "integer",
          "description": "Views number"
        },
        "editor_id": {
          "type": "integer",
          "description": "Last editor ID"
        },
        "creator_id": {
          "type": "integer",
          "description": "Page creator ID"
        },
        "source": {
          "type": "string",
          "description": "Page content, wiki"
        },
        "html": {
          "type": "string",
          "description": "Page content, HTML"
        },
        "view_url": {
          "type": "string",
          "description": "URL of the page preview"
        }
      },
      "required": [
        "id",
        "group_id",
        "title",
        "edited",
        "created",
        "views",
        "view_url",
        "who_can_view",
        "who_can_edit"
      ],
      "additionalProperties": false
    },
    "pages_wikipage_version": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Version ID"
        },
        "length": {
          "type": "integer",
          "description": "Page size in bytes"
        },
        "edited": {
          "type": "integer",
          "description": "Date when the page has been edited in Unixtime"
        },
        "editor_id": {
          "type": "integer",
          "description": "Last editor ID"
        },
        "editor_name": {
          "type": "string",
          "description": "Last editor name"
        }
      }
    },
    "photos_photo_album": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Photo album ID"
        },
        "thumb": {
          "$ref": "#/definitions/photos_photo"
        },
        "owner_id": {
          "type": "integer",
          "description": "Album owner's ID"
        },
        "title": {
          "type": "string",
          "description": "Photo album title"
        },
        "description": {
          "type": "string",
          "description": "Photo album description"
        },
        "created": {
          "type": "integer",
          "description": "Date when the album has been created in Unixtime",
          "minimum": 0
        },
        "updated": {
          "type": "integer",
          "description": "Date when the album has been updated last time in Unixtime",
          "minimum": 0
        },
        "size": {
          "type": "integer",
          "description": "Photos number",
          "minimum": 0
        }
      },
      "required": [
        "id",
        "owner_id",
        "title",
        "created",
        "updated",
        "size"
      ],
      "additionalProperties": false
    },
    "photos_photo_album_full": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Photo album ID"
        },
        "thumb_id": {
          "type": "integer",
          "description": "Thumb photo ID",
          "minimum": 0
        },
        "thumb_src": {
          "type": "string",
          "description": "URL of the thumb image"
        },
        "owner_id": {
          "type": "integer",
          "description": "Album owner's ID"
        },
        "title": {
          "type": "string",
          "description": "Photo album title"
        },
        "description": {
          "type": "string",
          "description": "Photo album description"
        },
        "created": {
          "type": "integer",
          "description": "Date when the album has been created in Unixtime",
          "minimum": 0
        },
        "updated": {
          "type": "integer",
          "description": "Date when the album has been updated last time in Unixtime",
          "minimum": 0
        },
        "size": {
          "type": "integer",
          "description": "Photos number",
          "minimum": 0
        },
        "privacy_view": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "Privacy view"
          }
        },
        "privacy_comment": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "Privacy comment"
          }
        },
        "upload_by_admins_only": {
          "description": "Information whether only community administrators can upload photos",
          "$ref": "#/definitions/base_bool_int"
        },
        "comments_disabled": {
          "description": "Information whether album comments are disabled",
          "$ref": "#/definitions/base_bool_int"
        },
        "can_upload": {
          "description": "Information whether current user can upload photo to the album",
          "$ref": "#/definitions/base_bool_int"
        },
        "thumb_is_last": {
          "description": "Information whether the album thumb is last photo",
          "$ref": "#/definitions/base_bool_int"
        },
        "sizes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/photos_photo_sizes"
          }
        }
      },
      "required": [
        "id",
        "owner_id",
        "title",
        "created",
        "updated",
        "size"
      ],
      "additionalProperties": false
    },
    "photos_comment_xtr_pid": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Comment ID",
          "minimum": 1
        },
        "from_id": {
          "type": "integer",
          "description": "Author ID"
        },
        "date": {
          "type": "integer",
          "description": "Date when the comment has been added in Unixtime",
          "minimum": 0
        },
        "text": {
          "type": "string",
          "description": "Comment text"
        },
        "likes": {
          "$ref": "#/definitions/base_likes_info"
        },
        "reply_to_user": {
          "type": "integer",
          "description": "Replied user ID"
        },
        "reply_to_comment": {
          "type": "integer",
          "description": "Replied comment ID"
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/wall_comment_attachment"
          }
        },
        "pid": {
          "type": "integer",
          "description": "Photo ID",
          "minimum": 1
        }
      },
      "required": [
        "id",
        "from_id",
        "date",
        "text",
        "pid"
      ],
      "additionalProperties": false
    },
    "photos_market_album_upload_response": {
      "type": "object",
      "properties": {
        "gid": {
          "type": "integer",
          "description": "Community ID"
        },
        "server": {
          "type": "integer",
          "description": "Upload server number"
        },
        "photo": {
          "type": "string",
          "description": "Uploaded photo data"
        },
        "hash": {
          "type": "string",
          "description": "Uploading hash"
        }
      }
    },
    "photos_market_upload_response": {
      "type": "object",
      "properties": {
        "group_id": {
          "type": "integer",
          "description": "Community ID"
        },
        "server": {
          "type": "integer",
          "description": "Upload server number"
        },
        "photo": {
          "type": "string",
          "description": "Uploaded photo data"
        },
        "hash": {
          "type": "string",
          "description": "Uploading hash"
        },
        "crop_data": {
          "type": "string",
          "description": "Crop data"
        },
        "crop_hash": {
          "type": "string",
          "description": "Crop hash"
        }
      }
    },
    "photos_message_upload_response": {
      "type": "object",
      "properties": {
        "server": {
          "type": "integer",
          "description": "Upload server number"
        },
        "photo": {
          "type": "string",
          "description": "Uploaded photo data"
        },
        "hash": {
          "type": "string",
          "description": "Uploading hash"
        }
      }
    },
    "photos_owner_upload_response": {
      "type": "object",
      "properties": {
        "server": {
          "type": "integer",
          "description": "Upload server number"
        },
        "photo": {
          "type": "string",
          "description": "Uploaded photo data"
        },
        "hash": {
          "type": "string",
          "description": "Uploading hash"
        }
      }
    },
    "photos_image_type": {
      "type": "string",
      "description": "Photo's type.",
      "enum": [
        "s",
        "m",
        "x",
        "o",
        "p",
        "q",
        "r",
        "y",
        "z",
        "w",
        "k"
      ]
    },
    "photos_image": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/photos_image_type"
        },
        "url": {
          "type": "string",
          "description": "Photo URL."
        },
        "width": {
          "type": "integer",
          "description": "Width of the photo in px."
        },
        "height": {
          "type": "integer",
          "description": "Height of the photo in px."
        }
      }
    },
    "photos_photo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Photo ID",
          "minimum": 0
        },
        "album_id": {
          "type": "integer",
          "description": "Album ID"
        },
        "owner_id": {
          "type": "integer",
          "description": "Photo owner's ID"
        },
        "user_id": {
          "type": "integer",
          "description": "ID of the user who have uploaded the photo",
          "minimum": 1
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/photos_image"
          }
        },
        "post_id": {
          "type": "integer",
          "description": "Post ID",
          "minimum": 1
        },
        "width": {
          "type": "integer",
          "description": "Original photo width",
          "minimum": 0
        },
        "height": {
          "type": "integer",
          "description": "Original photo height",
          "minimum": 0
        },
        "text": {
          "type": "string",
          "description": "Photo caption"
        },
        "date": {
          "type": "integer",
          "description": "Date when uploaded",
          "minimum": 0
        },
        "lat": {
          "type": "number",
          "description": "Latitude"
        },
        "long": {
          "type": "number",
          "description": "Longitude"
        },
        "access_key": {
          "type": "string",
          "description": "Access key for the photo"
        }
      },
      "required": [
        "id",
        "album_id",
        "owner_id",
        "date"
      ],
      "additionalProperties": false
    },
    "photos_photo_full": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Photo ID",
          "minimum": 0
        },
        "album_id": {
          "type": "integer",
          "description": "Album ID"
        },
        "owner_id": {
          "type": "integer",
          "description": "Photo owner's ID"
        },
        "user_id": {
          "type": "integer",
          "description": "ID of the user who have uploaded the photo",
          "minimum": 1
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/photos_image"
          }
        },
        "post_id": {
          "type": "integer",
          "description": "Post ID",
          "minimum": 1
        },
        "width": {
          "type": "integer",
          "description": "Original photo width",
          "minimum": 0
        },
        "height": {
          "type": "integer",
          "description": "Original photo height",
          "minimum": 0
        },
        "text": {
          "type": "string",
          "description": "Photo caption"
        },
        "date": {
          "type": "integer",
          "description": "Date when uploaded",
          "minimum": 0
        },
        "lat": {
          "type": "number",
          "description": "Latitude"
        },
        "long": {
          "type": "number",
          "description": "Longitude"
        },
        "access_key": {
          "type": "string",
          "description": "Access key for the photo"
        },
        "likes": {
          "$ref": "#/definitions/base_likes"
        },
        "reposts": {
          "$ref": "#/definitions/base_object_count"
        },
        "comments": {
          "$ref": "#/definitions/base_object_count"
        },
        "can_comment": {
          "description": "Information whether current user can comment the photo",
          "$ref": "#/definitions/base_bool_int"
        },
        "tags": {
          "$ref": "#/definitions/base_object_count"
        }
      },
      "required": [
        "id",
        "album_id",
        "owner_id",
        "date"
      ],
      "additionalProperties": false
    },
    "photos_photo_full_xtr_real_offset": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Photo ID",
          "minimum": 0
        },
        "album_id": {
          "type": "integer",
          "description": "Album ID"
        },
        "owner_id": {
          "type": "integer",
          "description": "Photo owner's ID"
        },
        "user_id": {
          "type": "integer",
          "description": "ID of the user who have uploaded the photo",
          "minimum": 1
        },
        "sizes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/photos_photo_sizes"
          }
        },
        "photo_75": {
          "type": "string",
          "description": "URL of image with 75 px width"
        },
        "photo_130": {
          "type": "string",
          "description": "URL of image with 130 px width"
        },
        "photo_604": {
          "type": "string",
          "description": "URL of image with 604 px width"
        },
        "photo_807": {
          "type": "string",
          "description": "URL of image with 807 px width"
        },
        "photo_1280": {
          "type": "string",
          "description": "URL of image with 1280 px width"
        },
        "photo_2560": {
          "type": "string",
          "description": "URL of image with 2560 px width"
        },
        "post_id": {
          "type": "integer",
          "description": "Post ID",
          "minimum": 1
        },
        "width": {
          "type": "integer",
          "description": "Original photo width",
          "minimum": 0
        },
        "height": {
          "type": "integer",
          "description": "Original photo height",
          "minimum": 0
        },
        "text": {
          "type": "string",
          "description": "Photo caption"
        },
        "date": {
          "type": "integer",
          "description": "Date when uploaded",
          "minimum": 0
        },
        "lat": {
          "type": "number",
          "description": "Latitude"
        },
        "long": {
          "type": "number",
          "description": "Longitude"
        },
        "access_key": {
          "type": "string",
          "description": "Access key for the photo"
        },
        "likes": {
          "$ref": "#/definitions/base_likes"
        },
        "reposts": {
          "$ref": "#/definitions/base_object_count"
        },
        "comments": {
          "$ref": "#/definitions/base_object_count"
        },
        "can_comment": {
          "$ref": "#/definitions/base_bool_int"
        },
        "tags": {
          "$ref": "#/definitions/base_object_count"
        },
        "hidden": {
          "description": "Returns if the photo is hidden above the wall",
          "$ref": "#/definitions/base_property_exists"
        },
        "real_offset": {
          "type": "integer",
          "description": "Real position of the photo"
        }
      },
      "required": [
        "id",
        "album_id",
        "owner_id",
        "date"
      ],
      "additionalProperties": false
    },
    "photos_photo_xtr_real_offset": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Photo ID",
          "minimum": 0
        },
        "album_id": {
          "type": "integer",
          "description": "Album ID"
        },
        "owner_id": {
          "type": "integer",
          "description": "Photo owner's ID"
        },
        "user_id": {
          "type": "integer",
          "description": "ID of the user who have uploaded the photo",
          "minimum": 1
        },
        "sizes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/photos_photo_sizes"
          }
        },
        "photo_75": {
          "type": "string",
          "description": "URL of image with 75 px width"
        },
        "photo_130": {
          "type": "string",
          "description": "URL of image with 130 px width"
        },
        "photo_604": {
          "type": "string",
          "description": "URL of image with 604 px width"
        },
        "photo_807": {
          "type": "string",
          "description": "URL of image with 807 px width"
        },
        "photo_1280": {
          "type": "string",
          "description": "URL of image with 1280 px width"
        },
        "photo_2560": {
          "type": "string",
          "description": "URL of image with 2560 px width"
        },
        "post_id": {
          "type": "integer",
          "description": "Post ID",
          "minimum": 1
        },
        "width": {
          "type": "integer",
          "description": "Original photo width",
          "minimum": 0
        },
        "height": {
          "type": "integer",
          "description": "Original photo height",
          "minimum": 0
        },
        "text": {
          "type": "string",
          "description": "Photo caption"
        },
        "date": {
          "type": "integer",
          "description": "Date when uploaded",
          "minimum": 0
        },
        "lat": {
          "type": "number",
          "description": "Latitude"
        },
        "long": {
          "type": "number",
          "description": "Longitude"
        },
        "access_key": {
          "type": "string",
          "description": "Access key for the photo"
        },
        "hidden": {
          "description": "Returns if the photo is hidden above the wall",
          "$ref": "#/definitions/base_property_exists"
        },
        "real_offset": {
          "type": "integer",
          "description": "Real position of the photo"
        }
      },
      "required": [
        "id",
        "album_id",
        "owner_id",
        "date"
      ],
      "additionalProperties": false
    },
    "photos_photo_xtr_tag_info": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Photo ID",
          "minimum": 0
        },
        "album_id": {
          "type": "integer",
          "description": "Album ID"
        },
        "owner_id": {
          "type": "integer",
          "description": "Photo owner's ID"
        },
        "user_id": {
          "type": "integer",
          "description": "ID of the user who have uploaded the photo",
          "minimum": 1
        },
        "sizes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/photos_photo_sizes"
          }
        },
        "photo_75": {
          "type": "string",
          "description": "URL of image with 75 px width"
        },
        "photo_130": {
          "type": "string",
          "description": "URL of image with 130 px width"
        },
        "photo_604": {
          "type": "string",
          "description": "URL of image with 604 px width"
        },
        "photo_807": {
          "type": "string",
          "description": "URL of image with 807 px width"
        },
        "photo_1280": {
          "type": "string",
          "description": "URL of image with 1280 px width"
        },
        "photo_2560": {
          "type": "string",
          "description": "URL of image with 2560 px width"
        },
        "post_id": {
          "type": "integer",
          "description": "Post ID",
          "minimum": 1
        },
        "width": {
          "type": "integer",
          "description": "Original photo width",
          "minimum": 0
        },
        "height": {
          "type": "integer",
          "description": "Original photo height",
          "minimum": 0
        },
        "text": {
          "type": "string",
          "description": "Photo caption"
        },
        "date": {
          "type": "integer",
          "description": "Date when uploaded",
          "minimum": 0
        },
        "lat": {
          "type": "number",
          "description": "Latitude"
        },
        "long": {
          "type": "number",
          "description": "Longitude"
        },
        "access_key": {
          "type": "string",
          "description": "Access key for the photo"
        },
        "placer_id": {
          "type": "integer",
          "description": "ID of the tag creator"
        },
        "tag_created": {
          "type": "integer",
          "description": "Date when tag has been added in Unixtime",
          "minimum": 0
        },
        "tag_id": {
          "type": "integer",
          "description": "Tag ID"
        }
      },
      "required": [
        "id",
        "album_id",
        "owner_id",
        "date"
      ],
      "additionalProperties": false
    },
    "photos_photo_sizes_type": {
      "type": "string",
      "description": "Size type",
      "enum": [
        "s",
        "m",
        "x",
        "o",
        "p",
        "q",
        "r",
        "y",
        "z",
        "w"
      ]
    },
    "photos_photo_sizes": {
      "type": "object",
      "properties": {
        "src": {
          "type": "string",
          "description": "URL of the image"
        },
        "width": {
          "type": "integer",
          "description": "Width in px",
          "minimum": 0
        },
        "height": {
          "type": "integer",
          "description": "Height in px",
          "minimum": 0
        },
        "type": {
          "$ref": "#/definitions/photos_photo_sizes_type"
        }
      },
      "required": [
        "src",
        "width",
        "height",
        "type"
      ],
      "additionalProperties": false
    },
    "photos_photo_tag": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "description": "Tagged user ID"
        },
        "id": {
          "type": "integer",
          "description": "Tag ID"
        },
        "placer_id": {
          "type": "integer",
          "description": "ID of the tag creator"
        },
        "tagged_name": {
          "type": "string",
          "description": "Tag description"
        },
        "date": {
          "type": "integer",
          "description": "Date when tag has been added in Unixtime",
          "minimum": 0
        },
        "x": {
          "type": "number",
          "description": "Coordinate X of the left upper corner"
        },
        "y": {
          "type": "number",
          "description": "Coordinate Y of the left upper corner"
        },
        "x2": {
          "type": "number",
          "description": "Coordinate X of the right lower corner"
        },
        "y2": {
          "type": "number",
          "description": "Coordinate Y of the right lower corner"
        },
        "viewed": {
          "description": "Information whether the tag is reviewed",
          "$ref": "#/definitions/base_bool_int"
        }
      },
      "required": [
        "user_id",
        "id",
        "tagged_name",
        "placer_id",
        "date",
        "x",
        "y",
        "x2",
        "y2",
        "viewed"
      ],
      "additionalProperties": false
    },
    "photos_photo_upload": {
      "type": "object",
      "properties": {
        "upload_url": {
          "type": "string",
          "description": "URL to upload photo"
        },
        "album_id": {
          "type": "integer",
          "description": "Album ID"
        },
        "user_id": {
          "type": "integer",
          "description": "User ID"
        }
      },
      "required": [
        "upload_url",
        "album_id",
        "user_id"
      ],
      "additionalProperties": false
    },
    "photos_photo_upload_response": {
      "type": "object",
      "properties": {
        "server": {
          "type": "integer",
          "description": "Upload server number"
        },
        "photos_list": {
          "type": "string",
          "description": "Uploaded photos data"
        },
        "aid": {
          "type": "integer",
          "description": "Album ID"
        },
        "hash": {
          "type": "string",
          "description": "Uploading hash"
        }
      }
    },
    "photos_wall_upload_response": {
      "type": "object",
      "properties": {
        "server": {
          "type": "integer",
          "description": "Upload server number"
        },
        "photo": {
          "type": "string",
          "description": "Uploaded photo data"
        },
        "hash": {
          "type": "string",
          "description": "Uploading hash"
        }
      }
    },
    "places_checkin": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Checkin ID"
        },
        "user_id": {
          "type": "integer",
          "description": "User ID"
        },
        "date": {
          "type": "integer",
          "description": "Date when the checkin has been added in Unixtime"
        },
        "latitude": {
          "type": "number",
          "description": "Place latitude"
        },
        "longitude": {
          "type": "number",
          "description": "Place longitude"
        },
        "place_id": {
          "type": "integer",
          "description": "Place ID"
        },
        "text": {
          "type": "string",
          "description": "Comment text"
        },
        "distance": {
          "type": "integer",
          "description": "Distance to the place"
        },
        "place_title": {
          "type": "string",
          "description": "Place title"
        },
        "place_country": {
          "type": "integer",
          "description": "Country ID"
        },
        "place_city": {
          "type": "integer",
          "description": "City ID"
        },
        "place_type": {
          "type": "string",
          "description": "Place type"
        },
        "place_icon": {
          "type": "string",
          "description": "URL of the place's icon"
        }
      },
      "required": [
        "id",
        "user_id",
        "date"
      ],
      "additionalProperties": false
    },
    "places_place_min": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Place ID"
        },
        "title": {
          "type": "string",
          "description": "Place title"
        },
        "latitude": {
          "type": "number",
          "description": "Place latitude"
        },
        "longitude": {
          "type": "number",
          "description": "Place longitude"
        },
        "created": {
          "type": "integer",
          "description": "Date of the place creation in Unixtime"
        },
        "icon": {
          "type": "string",
          "description": "URL of the place's icon"
        },
        "checkins": {
          "type": "integer",
          "description": "Checkins number"
        },
        "type": {
          "type": "string",
          "description": "Place type"
        },
        "country": {
          "type": "integer",
          "description": "Country ID"
        },
        "city": {
          "type": "integer",
          "description": "City ID"
        },
        "address": {
          "type": "string",
          "description": "Place address"
        }
      }
    },
    "places_place_full": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Place ID"
        },
        "title": {
          "type": "string",
          "description": "Place title"
        },
        "latitude": {
          "type": "number",
          "description": "Place latitude"
        },
        "longitude": {
          "type": "number",
          "description": "Place longitude"
        },
        "created": {
          "type": "integer",
          "description": "Date of the place creation in Unixtime"
        },
        "icon": {
          "type": "string",
          "description": "URL of the place's icon"
        },
        "checkins": {
          "type": "integer",
          "description": "Checkins number"
        },
        "type": {
          "type": "string",
          "description": "Place type"
        },
        "country": {
          "type": "integer",
          "description": "Country ID"
        },
        "city": {
          "type": "integer",
          "description": "City ID"
        },
        "address": {
          "type": "string",
          "description": "Place address"
        },
        "distance": {
          "type": "integer",
          "description": "Distance to the place"
        },
        "group_id": {
          "type": "integer",
          "description": "Community ID"
        },
        "group_photo": {
          "type": "string",
          "description": "URL of the community's photo"
        }
      }
    },
    "places_types": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Place type ID"
        },
        "title": {
          "type": "string",
          "description": "Place type title"
        },
        "icon": {
          "type": "string",
          "description": "URL of the place's icon"
        }
      }
    },
    "polls_answer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Answer ID",
          "minimum": 0
        },
        "text": {
          "type": "string",
          "description": "Answer text"
        },
        "votes": {
          "type": "integer",
          "description": "Votes number",
          "minimum": 0
        },
        "rate": {
          "type": "number",
          "description": "Answer rate in percents",
          "minimum": 0
        }
      },
      "required": [
        "id",
        "text",
        "votes",
        "rate"
      ],
      "additionalProperties": false
    },
    "polls_poll": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Poll ID",
          "minimum": 1
        },
        "owner_id": {
          "type": "integer",
          "description": "Poll owner's ID"
        },
        "created": {
          "type": "integer",
          "description": "Date when poll has been created in Unixtime",
          "minimum": 0
        },
        "question": {
          "type": "string",
          "description": "Poll question"
        },
        "votes": {
          "type": "string",
          "description": "Votes number",
          "minimum": 0
        },
        "answer_id": {
          "type": "integer",
          "description": "Current user's answer ID",
          "minimum": 0
        },
        "answers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/polls_answer"
          }
        },
        "anonymous": {
          "description": "Information whether the pole is anonymous",
          "$ref": "#/definitions/base_bool_int"
        }
      },
      "required": [
        "id",
        "owner_id",
        "created",
        "question",
        "votes",
        "answer_id",
        "answers",
        "anonymous"
      ],
      "additionalProperties": false
    },
    "polls_voters": {
      "type": "object",
      "properties": {
        "answer_id": {
          "type": "integer",
          "description": "Answer ID"
        },
        "users": {
          "$ref": "#/definitions/polls_voters_users"
        }
      }
    },
    "polls_voters_users": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Votes number"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "integer",
            "description": "User ID"
          }
        }
      }
    },
    "search_hint_type": {
      "type": "string",
      "description": "Object type",
      "enum": [
        "group",
        "profile"
      ]
    },
    "search_hint_section": {
      "type": "string",
      "description": "Section title",
      "enum": [
        "groups",
        "events",
        "publics",
        "correspondents",
        "people",
        "friends",
        "mutual_friends"
      ]
    },
    "search_hint": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/search_hint_type"
        },
        "section": {
          "$ref": "#/definitions/search_hint_section"
        },
        "description": {
          "type": "string",
          "description": "Object description"
        },
        "global": {
          "description": "Information whether the object has been found globally",
          "$ref": "#/definitions/base_bool_int"
        },
        "group": {
          "$ref": "#/definitions/groups_group"
        },
        "profile": {
          "$ref": "#/definitions/users_user_min"
        }
      },
      "required": [
        "type",
        "section",
        "description"
      ]
    },
    "secure_level": {
      "type": "object",
      "properties": {
        "uid": {
          "type": "integer",
          "description": "User ID"
        },
        "level": {
          "type": "integer",
          "description": "Level"
        }
      }
    },
    "secure_sms_notification": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Notification ID"
        },
        "app_id": {
          "type": "integer",
          "description": "Application ID"
        },
        "user_id": {
          "type": "integer",
          "description": "User ID"
        },
        "date": {
          "type": "integer",
          "description": "Date when message has been sent in Unixtime"
        },
        "message": {
          "type": "string",
          "description": "Messsage text"
        }
      }
    },
    "secure_token_checked": {
      "type": "object",
      "properties": {
        "success": {
          "description": "Returns if successfully processed",
          "$ref": "#/definitions/base_ok_response"
        },
        "user_id": {
          "type": "integer",
          "description": "User ID"
        },
        "date": {
          "type": "integer",
          "description": "Date when access_token has been generated in Unixtime"
        },
        "expire": {
          "type": "integer",
          "description": "Date when access_token will expire in Unixtime"
        }
      }
    },
    "secure_transaction": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Transaction ID"
        },
        "uid_from": {
          "type": "integer",
          "description": "From ID"
        },
        "uid_to": {
          "type": "integer",
          "description": "To ID"
        },
        "votes": {
          "type": "integer",
          "description": "Votes number"
        },
        "date": {
          "type": "integer",
          "description": "Transaction date in Unixtime"
        }
      }
    },
    "stats_period": {
      "type": "object",
      "properties": {
        "period_from": {
          "type": "string",
          "description": "Day (YYYY-MM-DD)"
        },
        "period_to": {
          "type": "string",
          "description": "Day (YYYY-MM-DD)"
        },
        "visitors": {
          "$ref": "#/definitions/stats_views"
        },
        "reach": {
          "$ref": "#/definitions/stats_reach"
        },
        "activity": {
          "$ref": "#/definitions/stats_activity"
        }
      }
    },
    "stats_views": {
      "type": "object",
      "description": "Views stats",
      "properties": {
        "views": {
          "type": "integer",
          "minimum": 0,
          "description": "Views number"
        },
        "visitors": {
          "type": "integer",
          "minimum": 0,
          "description": "Visitors number"
        },
        "mobile_views": {
          "type": "integer",
          "minimum": 0,
          "description": "Number of views from mobile devices"
        },
        "sex": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/stats_sex_age"
          }
        },
        "age": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/stats_sex_age"
          }
        },
        "sex_age": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/stats_sex_age"
          }
        },
        "countries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/stats_country"
          }
        },
        "cities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/stats_city"
          }
        }
      }
    },
    "stats_reach": {
      "type": "object",
      "description": "Reach stats",
      "properties": {
        "reach": {
          "type": "integer",
          "minimum": 0,
          "description": "Reach count"
        },
        "reach_subscribers": {
          "type": "integer",
          "minimum": 0,
          "description": "Subscribers reach count"
        },
        "mobile_reach": {
          "type": "integer",
          "minimum": 0,
          "description": "Reach count from mobile devices"
        },
        "sex": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/stats_sex_age"
          }
        },
        "age": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/stats_sex_age"
          }
        },
        "sex_age": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/stats_sex_age"
          }
        },
        "countries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/stats_country"
          }
        },
        "cities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/stats_city"
          }
        }
      }
    },
    "stats_activity": {
      "type": "object",
      "description": "Activity stats",
      "properties": {
        "likes": {
          "type": "integer",
          "minimum": 0,
          "description": "Likes number"
        },
        "comments": {
          "type": "integer",
          "minimum": 0,
          "description": "Comments number"
        },
        "copies": {
          "type": "integer",
          "minimum": 0,
          "description": "Reposts number"
        },
        "subscribed": {
          "type": "integer",
          "minimum": 0,
          "description": "New subscribers count"
        },
        "unsubscribed": {
          "type": "integer",
          "minimum": 0,
          "description": "Unsubscribed count"
        },
        "hidden": {
          "type": "integer",
          "minimum": 0,
          "description": "Hidden from news count"
        }
      }
    },
    "stats_sex_age": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Visitors number"
        },
        "value": {
          "type": "string",
          "description": "Sex/age value"
        }
      }
    },
    "stats_country": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Visitors number"
        },
        "value": {
          "type": "integer",
          "description": "Country ID"
        },
        "code": {
          "type": "string",
          "description": "Country code"
        },
        "name": {
          "type": "string",
          "description": "Country name"
        }
      }
    },
    "stats_city": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Visitors number"
        },
        "value": {
          "type": "integer",
          "description": "City ID"
        },
        "name": {
          "type": "string",
          "description": "City name"
        }
      }
    },
    "stats_wallpost_stat": {
      "type": "object",
      "properties": {
        "reach_subscribers": {
          "type": "integer",
          "description": "Subscribers reach"
        },
        "reach_total": {
          "type": "integer",
          "description": "Total reach"
        },
        "links": {
          "type": "integer",
          "description": "Link clickthrough"
        },
        "to_group": {
          "type": "integer",
          "description": "Clickthrough to community"
        },
        "join_group": {
          "type": "integer",
          "description": "People have joined the group"
        },
        "report": {
          "type": "integer",
          "description": "Reports number"
        },
        "hide": {
          "type": "integer",
          "description": "Hidings number"
        },
        "unsubscribe": {
          "type": "integer",
          "description": "Unsubscribed members"
        }
      }
    },
    "status_status": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "Status text"
        },
        "audio": {
          "$ref": "#/definitions/audio_audio_full"
        }
      }
    },
    "stories_story_stats_state": {
      "type": "string",
      "description": "Statistic state",
      "enum": [
        "on",
        "off",
        "hidden"
      ]
    },
    "stories_story_stats_stat": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/stories_story_stats_state"
        },
        "count": {
          "type": "integer",
          "description": "Stat value",
          "minimum": 0
        }
      },
      "required": [
        "state"
      ]
    },
    "stories_story_stats": {
      "type": "object",
      "properties": {
        "views": {
          "$ref": "#/definitions/stories_story_stats_stat"
        },
        "replies": {
          "$ref": "#/definitions/stories_story_stats_stat"
        },
        "answer": {
          "$ref": "#/definitions/stories_story_stats_stat"
        },
        "shares": {
          "$ref": "#/definitions/stories_story_stats_stat"
        },
        "subscribers": {
          "$ref": "#/definitions/stories_story_stats_stat"
        },
        "bans": {
          "$ref": "#/definitions/stories_story_stats_stat"
        },
        "open_link": {
          "$ref": "#/definitions/stories_story_stats_stat"
        }
      },
      "required": [
        "views",
        "replies",
        "answer",
        "shares",
        "subscribers",
        "bans",
        "open_link"
      ]
    },
    "stories_story_video": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/video_video"
        },
        {
          "properties": {
            "first_frame_800": {
              "type": "string",
              "description": "URL of the first frame for the corresponding width."
            },
            "first_frame_320": {
              "type": "string",
              "description": "URL of the first frame for the corresponding width."
            },
            "first_frame_160": {
              "type": "string",
              "description": "URL of the first frame for the corresponding width."
            },
            "first_frame_130": {
              "type": "string",
              "description": "URL of the first frame for the corresponding width."
            },
            "is_private": {
              "$ref": "#/definitions/base_bool_int",
              "description": "Information whether story is private (0 - no, 1 - yes)."
            }
          }
        }
      ]
    },
    "stories_story_type": {
      "type": "string",
      "description": "Story type.",
      "enum": [
        "photo",
        "video"
      ]
    },
    "stories_story_link": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "Link text"
        },
        "url": {
          "type": "string",
          "description": "Link URL"
        }
      },
      "required": [
        "text",
        "url"
      ]
    },
    "stories_story": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Story ID."
        },
        "owner_id": {
          "type": "integer",
          "description": "Story owner's ID."
        },
        "date": {
          "type": "integer",
          "minimum": 0,
          "description": "Date when story has been added in Unixtime."
        },
        "seen": {
          "$ref": "#/definitions/base_bool_int",
          "description": "Information whether current user has seen the story or not (0 - no, 1 - yes)."
        },
        "type": {
          "$ref": "#/definitions/stories_story_type"
        },
        "photo": {
          "$ref": "#/definitions/photos_photo"
        },
        "video": {
          "$ref": "#/definitions/stories_story_video"
        },
        "views": {
          "type": "integer",
          "minimum": 0,
          "description": "Views number."
        },
        "can_see": {
          "$ref": "#/definitions/base_bool_int",
          "description": "Information whether current user can see the story (0 - no, 1 - yes)."
        },
        "can_reply": {
          "$ref": "#/definitions/base_bool_int",
          "description": "Information whether current user can reply to the story (0 - no, 1 - yes)."
        },
        "can_share": {
          "$ref": "#/definitions/base_bool_int",
          "description": "Information whether current user can share the story (0 - no, 1 - yes)."
        },
        "can_comment": {
          "$ref": "#/definitions/base_bool_int",
          "description": "Information whether current user can comment the story (0 - no, 1 - yes)."
        },
        "is_deleted": {
          "type": "boolean",
          "description": "Information whether the story is deleted (false - no, true - yes)."
        },
        "is_expired": {
          "type": "boolean",
          "description": "Information whether the story is expired (false - no, true - yes)."
        },
        "access_key": {
          "type": "string",
          "description": "Access key for private object."
        },
        "parent_story_owner_id": {
          "type": "integer",
          "description": "Parent story owner's ID."
        },
        "parent_story_id": {
          "type": "integer",
          "description": "Parent story ID."
        },
        "parent_story_access_key": {
          "type": "string",
          "description": "Access key for private object."
        },
        "parent_story": {
          "$ref": "#/definitions/stories_story"
        },
        "link": {
          "$ref": "#/definitions/stories_story_link"
        },
        "replies": {
          "type": "array",
          "description": "Replies to current story.",
          "items": {
            "$ref": "#/definitions/stories_replies"
          }
        }
      },
      "required": [
        "id",
        "owner_id"
      ]
    },
    "stories_replies": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Replies number.",
          "minimum": 0
        },
        "new": {
          "type": "integer",
          "description": "New replies number."
        }
      },
      "required": [
        "count"
      ]
    },
    "utils_short_link": {
      "type": "object",
      "properties": {
        "short_url": {
          "type": "string",
          "description": "Short link URL"
        },
        "access_key": {
          "type": "string",
          "description": "Access key for private stats"
        },
        "key": {
          "type": "string",
          "description": "Link key (characters after vk.cc/)"
        },
        "url": {
          "type": "string",
          "description": "Full URL"
        }
      }
    },
    "utils_last_shortened_link": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "integer",
          "description": "Creation time in Unixtime"
        },
        "url": {
          "type": "string",
          "description": "Full URL"
        },
        "short_url": {
          "type": "string",
          "description": "Short link URL"
        },
        "key": {
          "type": "string",
          "description": "Link key (characters after vk.cc/)"
        },
        "views": {
          "type": "integer",
          "description": "Total views number"
        },
        "access_key": {
          "type": "string",
          "description": "Access key for private stats"
        }
      }
    },
    "utils_link_stats": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Link key (characters after vk.cc/)"
        },
        "stats": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/utils_stats"
          }
        }
      }
    },
    "utils_link_stats_extended": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Link key (characters after vk.cc/)"
        },
        "stats": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/utils_stats_extended"
          }
        }
      }
    },
    "utils_stats": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "integer",
          "description": "Start time"
        },
        "views": {
          "type": "integer",
          "description": "Total views number"
        }
      }
    },
    "utils_stats_extended": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "integer",
          "description": "Start time"
        },
        "views": {
          "type": "integer",
          "description": "Total views number"
        },
        "sex_age": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/utils_stats_sex_age"
          }
        },
        "countries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/utils_stats_country"
          }
        },
        "cities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/utils_stats_city"
          }
        }
      }
    },
    "utils_stats_sex_age": {
      "type": "object",
      "properties": {
        "age_range": {
          "type": "string",
          "description": "Age denotation"
        },
        "female": {
          "type": "integer",
          "description": " Views by female users"
        },
        "male": {
          "type": "integer",
          "description": " Views by male users"
        }
      }
    },
    "utils_stats_country": {
      "type": "object",
      "properties": {
        "country_id": {
          "type": "integer",
          "description": "Country ID"
        },
        "views": {
          "type": "integer",
          "description": "Views number"
        }
      }
    },
    "utils_stats_city": {
      "type": "object",
      "properties": {
        "city_id": {
          "type": "integer",
          "description": "City ID"
        },
        "views": {
          "type": "integer",
          "description": "Views number"
        }
      }
    },
    "utils_domain_resolved_type": {
      "type": "string",
      "description": "Object type",
      "enum": [
        "user",
        "group",
        "application",
        "page"
      ]
    },
    "utils_domain_resolved": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/utils_domain_resolved_type"
        },
        "object_id": {
          "type": "integer",
          "description": "Object ID"
        }
      }
    },
    "utils_link_checked_status": {
      "type": "string",
      "description": "Link status",
      "enum": [
        "not_banned",
        "banned",
        "processing"
      ]
    },
    "utils_link_checked": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/utils_link_checked_status"
        },
        "link": {
          "type": "string",
          "description": "Link URL"
        }
      }
    },
    "users_users_array": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Users number",
          "minimum": 0
        },
        "items": {
          "type": "array",
          "items": {
            "type": "integer",
            "description": "User ID"
          }
        }
      },
      "required": [
        "count",
        "items"
      ],
      "additionalProperties": false
    },
    "users_user_counters": {
      "type": "object",
      "properties": {
        "albums": {
          "type": "integer",
          "description": "Albums number"
        },
        "videos": {
          "type": "integer",
          "description": "Videos number"
        },
        "audios": {
          "type": "integer",
          "description": "Audios number"
        },
        "notes": {
          "type": "integer",
          "description": "Notes number"
        },
        "photos": {
          "type": "integer",
          "description": "Photos number"
        },
        "groups": {
          "type": "integer",
          "description": "Communities number"
        },
        "gifts": {
          "type": "integer",
          "description": "Gifts number"
        },
        "friends": {
          "type": "integer",
          "description": "Friends number"
        },
        "online_friends": {
          "type": "integer",
          "description": "Online friends number"
        },
        "user_photos": {
          "type": "integer",
          "description": "Number of photos with user"
        },
        "user_videos": {
          "type": "integer",
          "description": "Number of videos with user"
        },
        "followers": {
          "type": "integer",
          "description": "Followers number"
        },
        "subscriptions": {
          "type": "integer",
          "description": "Subscriptions number"
        },
        "pages": {
          "type": "integer",
          "description": "Public pages number"
        }
      }
    },
    "users_user": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/users_user_min"
        },
        {
          "properties": {
            "sex": {
              "$ref": "#/definitions/base_sex",
              "description": "User sex"
            },
            "screen_name": {
              "type": "string",
              "description": "Domain name of the user's page"
            },
            "photo_50": {
              "type": "string",
              "description": "URL of square photo of the user with 50 pixels in width"
            },
            "photo_100": {
              "type": "string",
              "description": "URL of square photo of the user with 100 pixels in width"
            },
            "online": {
              "description": "Information whether the user is online",
              "$ref": "#/definitions/base_bool_int"
            },
            "online_mobile": {
              "description": "Information whether the user is online in mobile site or application",
              "$ref": "#/definitions/base_bool_int"
            },
            "online_app": {
              "type": "integer",
              "description": "Application ID"
            }
          }
        }
      ]
    },
    "users_user_type": {
      "type": "string",
      "description": "Object type",
      "enum": [
        "profile"
      ]
    },
    "users_user_full_xtr_type": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/users_user_full"
        },
        {
          "properties": {
            "type": {
              "$ref": "#/definitions/users_user_type"
            }
          }
        }
      ]
    },
    "users_user_xtr_type": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/users_user"
        },
        {
          "properties": {
            "type": {
              "$ref": "#/definitions/users_user_type"
            }
          }
        }
      ]
    },
    "users_user_min": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "User ID"
        },
        "first_name": {
          "type": "string",
          "description": "User first name"
        },
        "last_name": {
          "type": "string",
          "description": "User last name"
        },
        "deactivated": {
          "type": "string",
          "description": "Returns if a profile is deleted or blocked"
        },
        "hidden": {
          "type": "integer",
          "description": "Returns if a profile is hidden."
        }
      },
      "required": [
        "id",
        "first_name",
        "last_name"
      ],
      "additionalProperties": false
    },
    "users_user_broadcast": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/users_user_min"
        },
        {
          "properties": {
            "status_audio": {
              "$ref": "#/definitions/audio_audio_full"
            }
          }
        }
      ]
    },
    "users_user_full": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/users_user"
        },
        {
          "properties": {
            "nickname": {
              "type": "string",
              "description": "User nickname"
            },
            "maiden_name": {
              "type": "string",
              "description": "User maiden name"
            },
            "domain": {
              "type": "string",
              "description": "Domain name of the user's page"
            },
            "bdate": {
              "type": "string",
              "description": "User's date of birth"
            },
            "city": {
              "$ref": "#/definitions/base_object"
            },
            "country": {
              "$ref": "#/definitions/base_country"
            },
            "timezone": {
              "type": "integer",
              "description": "User's timezone"
            },
            "photo_200": {
              "type": "string",
              "description": "URL of square photo of the user with 200 pixels in width"
            },
            "photo_max": {
              "type": "string",
              "description": "URL of square photo of the user with maximum width"
            },
            "photo_200_orig": {
              "type": "string",
              "description": "URL of user's photo with 200 pixels in width"
            },
            "photo_400_orig": {
              "type": "string",
              "description": "URL of user's photo with 400 pixels in width"
            },
            "photo_max_orig": {
              "type": "string",
              "description": "URL of user's photo of maximum size"
            },
            "photo_id": {
              "type": "string",
              "description": "ID of the user's main photo"
            },
            "has_photo": {
              "$ref": "#/definitions/base_bool_int",
              "description": "Information whether the user has main photo"
            },
            "trending": {
              "$ref": "#/definitions/base_bool_int",
              "description": "Information whether the community has a \"fire\" pictogram."
            },
            "has_mobile": {
              "description": "Information whether the user specified his phone number",
              "$ref": "#/definitions/base_bool_int"
            },
            "is_friend": {
              "description": "Information whether the user is a friend of current user",
              "$ref": "#/definitions/base_bool_int"
            },
            "friend_status": {
              "type": "integer",
              "description": "Friend status for current user"
            },
            "wall_comments": {
              "description": "Information whether current user can comment wall posts",
              "$ref": "#/definitions/base_bool_int"
            },
            "can_post": {
              "description": "Information whether current user can post on the user's wall",
              "$ref": "#/definitions/base_bool_int"
            },
            "can_see_all_posts": {
              "description": "Information whether current user can see other users' audio on the wall",
              "$ref": "#/definitions/base_bool_int"
            },
            "can_see_audio": {
              "description": "Information whether current user can see the user's audio",
              "$ref": "#/definitions/base_bool_int"
            },
            "can_write_private_message": {
              "description": "Information whether current user can write private message",
              "$ref": "#/definitions/base_bool_int"
            },
            "can_send_friend_request": {
              "description": "Information whether current user can send a friend request",
              "$ref": "#/definitions/base_bool_int"
            },
            "mobile_phone": {
              "type": "string",
              "description": "Information whether current user can see"
            },
            "home_phone": {
              "type": "string",
              "description": "User's mobile phone number"
            },
            "skype": {
              "type": "string",
              "description": "User's Skype nickname"
            },
            "facebook": {
              "type": "string",
              "description": "User's Facebook account"
            },
            "facebook_name": {
              "type": "string",
              "description": "User's Facebook name"
            },
            "twitter": {
              "type": "string",
              "description": "User's Twitter account"
            },
            "livejournal": {
              "type": "string",
              "description": "User's Livejournal account"
            },
            "instagram": {
              "type": "string",
              "description": "User's Instagram account"
            },
            "site": {
              "type": "string",
              "description": "User's website"
            },
            "status_audio": {
              "$ref": "#/definitions/audio_audio_full"
            },
            "status": {
              "type": "string",
              "description": "User's status"
            },
            "activity": {
              "type": "string",
              "description": "User's status"
            },
            "last_seen": {
              "$ref": "#/definitions/users_last_seen"
            },
            "exports": {
              "$ref": "#/definitions/users_exports"
            },
            "crop_photo": {
              "$ref": "#/definitions/users_crop_photo"
            },
            "verified": {
              "description": "Information whether the user is verified",
              "$ref": "#/definitions/base_bool_int"
            },
            "followers_count": {
              "type": "integer",
              "description": "Number of user's followers",
              "minimum": 0
            },
            "blacklisted": {
              "description": "Information whether current user is in the requested user's blacklist.",
              "$ref": "#/definitions/base_bool_int"
            },
            "blacklisted_by_me": {
              "description": "Information whether the requested user is in current user's blacklist",
              "$ref": "#/definitions/base_bool_int"
            },
            "is_favorite": {
              "description": "Information whether the requested user is in faves of current user",
              "$ref": "#/definitions/base_bool_int"
            },
            "is_hidden_from_feed": {
              "description": "Information whether the requested user is hidden from current user's newsfeed",
              "$ref": "#/definitions/base_bool_int"
            },
            "common_count": {
              "type": "integer",
              "description": "Number of common friends with current user",
              "minimum": 0
            },
            "occupation": {
              "$ref": "#/definitions/users_occupation"
            },
            "career": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/users_career"
              }
            },
            "military": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/users_military"
              }
            },
            "university": {
              "type": "integer",
              "description": "University ID"
            },
            "university_name": {
              "type": "string",
              "description": "University name"
            },
            "faculty": {
              "type": "integer",
              "description": "Faculty ID"
            },
            "faculty_name": {
              "type": "string",
              "description": "Faculty name"
            },
            "graduation": {
              "type": "integer",
              "description": "Graduation year"
            },
            "education_form": {
              "type": "string",
              "description": "Education form"
            },
            "education_status": {
              "type": "string",
              "description": "User's education status"
            },
            "home_town": {
              "type": "string",
              "description": "User hometown"
            },
            "relation": {
              "type": "integer",
              "description": "User relationship status"
            },
            "relation_partner": {
              "$ref": "#/definitions/users_user_min"
            },
            "personal": {
              "$ref": "#/definitions/users_personal"
            },
            "interests": {
              "type": "string",
              "description": "User's interests"
            },
            "music": {
              "type": "string",
              "description": "User's favorite music"
            },
            "activities": {
              "type": "string",
              "description": "User's activities"
            },
            "movies": {
              "type": "string",
              "description": "User's favorite movies"
            },
            "tv": {
              "type": "string",
              "description": "User's favorite tv shows"
            },
            "books": {
              "type": "string",
              "description": "User's favorite books"
            },
            "games": {
              "type": "string",
              "description": "User's favorite games"
            },
            "universities": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/users_university"
              }
            },
            "schools": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/users_school"
              }
            },
            "about": {
              "type": "string",
              "description": "About me field"
            },
            "relatives": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/users_relative"
              }
            },
            "quotes": {
              "type": "string",
              "description": "Favorite quotes"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "users_career": {
      "type": "object",
      "properties": {
        "group_id": {
          "type": "integer",
          "description": "Community ID"
        },
        "company": {
          "type": "string",
          "description": "Company name"
        },
        "country_id": {
          "type": "integer",
          "description": "Country ID"
        },
        "city_id": {
          "type": "integer",
          "description": "City ID"
        },
        "from": {
          "type": "integer",
          "description": "From year"
        },
        "until": {
          "type": "integer",
          "description": "Till year"
        },
        "position": {
          "type": "string",
          "description": "Position"
        }
      },
      "additionalProperties": false
    },
    "users_exports": {
      "type": "object",
      "properties": {
        "twitter": {
          "type": "integer"
        },
        "facebook": {
          "type": "integer"
        },
        "livejournal": {
          "type": "integer"
        }
      }
    },
    "users_military": {
      "type": "object",
      "properties": {
        "unit": {
          "type": "string",
          "description": "Unit name"
        },
        "unit_id": {
          "type": "integer",
          "description": "Unit ID"
        },
        "country_id": {
          "type": "integer",
          "description": "Country ID"
        },
        "from": {
          "type": "integer",
          "description": "From year"
        },
        "until": {
          "type": "integer",
          "description": "Till year"
        }
      },
      "additionalProperties": false
    },
    "users_relative": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Relative ID"
        },
        "type": {
          "type": "string",
          "description": "Relative type"
        }
      },
      "additionalProperties": false
    },
    "users_user_lim": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "User ID"
        },
        "photo": {
          "type": "string",
          "description": "URL of square photo of the user with 50 pixels in width"
        },
        "name": {
          "type": "string",
          "description": "User name and last name"
        },
        "name_gen": {
          "type": "string",
          "description": "User name in genitive declension"
        }
      }
    },
    "users_last_seen": {
      "type": "object",
      "properties": {
        "time": {
          "type": "integer",
          "description": "Last visit date (in Unix time)"
        },
        "platform": {
          "type": "integer",
          "description": "Type of the platform that used for the last authorization"
        }
      },
      "additionalProperties": false
    },
    "users_university": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "University ID"
        },
        "country": {
          "type": "integer",
          "description": "Country ID"
        },
        "city": {
          "type": "integer",
          "description": "City ID"
        },
        "name": {
          "type": "string",
          "description": "University name"
        },
        "faculty": {
          "type": "integer",
          "description": "Faculty ID"
        },
        "faculty_name": {
          "type": "string",
          "description": "Faculty name"
        },
        "chair": {
          "type": "integer",
          "description": "Chair ID"
        },
        "chair_name": {
          "type": "string",
          "description": "Chair name"
        },
        "graduation": {
          "type": "integer",
          "description": "Graduation year"
        },
        "education_form": {
          "type": "string",
          "description": "Education form"
        },
        "education_status": {
          "type": "string",
          "description": "Education status"
        }
      },
      "additionalProperties": false
    },
    "users_school": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "School ID"
        },
        "country": {
          "type": "integer",
          "description": "Country ID"
        },
        "city": {
          "type": "integer",
          "description": "City ID"
        },
        "name": {
          "type": "string",
          "description": "School name"
        },
        "year_from": {
          "type": "integer",
          "description": "Year the user started to study"
        },
        "year_to": {
          "type": "integer",
          "description": "Year the user finished to study"
        },
        "year_graduated": {
          "type": "integer",
          "description": "Graduation year"
        },
        "class": {
          "type": "string",
          "description": "School class letter"
        },
        "type": {
          "type": "integer",
          "description": "School type ID"
        },
        "type_str": {
          "type": "string",
          "description": "School type name"
        }
      },
      "additionalProperties": false
    },
    "users_crop_photo": {
      "type": "object",
      "properties": {
        "photo": {
          "$ref": "#/definitions/photos_photo"
        },
        "crop": {
          "$ref": "#/definitions/users_crop_photo_crop"
        },
        "rect": {
          "$ref": "#/definitions/users_crop_photo_rect"
        }
      }
    },
    "users_crop_photo_crop": {
      "type": "object",
      "properties": {
        "x": {
          "type": "number",
          "description": "Coordinate X of the left upper corner"
        },
        "y": {
          "type": "number",
          "description": "Coordinate Y of the left upper corner"
        },
        "x2": {
          "type": "number",
          "description": "Coordinate X of the right lower corner"
        },
        "y2": {
          "type": "number",
          "description": "Coordinate Y of the right lower corner"
        }
      },
      "additionalProperties": false
    },
    "users_crop_photo_rect": {
      "type": "object",
      "properties": {
        "x": {
          "type": "number",
          "description": "Coordinate X of the left upper corner"
        },
        "y": {
          "type": "number",
          "description": "Coordinate Y of the left upper corner"
        },
        "x2": {
          "type": "number",
          "description": "Coordinate X of the right lower corner"
        },
        "y2": {
          "type": "number",
          "description": "Coordinate Y of the right lower corner"
        }
      },
      "additionalProperties": false
    },
    "users_occupation": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of occupation"
        },
        "id": {
          "type": "integer",
          "description": "ID of school, university, company group",
          "minimum": 0
        },
        "name": {
          "type": "string",
          "description": "Name of occupation"
        }
      },
      "additionalProperties": false
    },
    "users_personal": {
      "type": "object",
      "properties": {
        "political": {
          "type": "integer",
          "description": "User's political views"
        },
        "langs": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "User's languages"
          }
        },
        "religion": {
          "type": "string",
          "description": "User's religion"
        },
        "inspired_by": {
          "type": "string",
          "description": "User's inspired by"
        },
        "people_main": {
          "type": "integer",
          "description": "User's personal priority in people"
        },
        "life_main": {
          "type": "integer",
          "description": "User's personal priority in life"
        },
        "smoking": {
          "type": "integer",
          "description": "User's views on smoking"
        },
        "alcohol": {
          "type": "integer",
          "description": "User's views on alcohol"
        }
      },
      "additionalProperties": false
    },
    "users_user_xtr_counters": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/users_user_full"
        },
        {
          "properties": {
            "counters": {
              "$ref": "#/definitions/users_user_counters"
            }
          }
        }
      ]
    },
    "video_video_album": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Album ID"
        },
        "owner_id": {
          "type": "integer",
          "description": "Album owner's ID"
        },
        "title": {
          "type": "string",
          "description": "Album title"
        }
      },
      "required": [
        "id",
        "owner_id",
        "title"
      ],
      "additionalProperties": false
    },
    "video_video_album_full": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Album ID"
        },
        "owner_id": {
          "type": "integer",
          "description": "Album owner's ID"
        },
        "title": {
          "type": "string",
          "description": "Album title"
        },
        "count": {
          "type": "integer",
          "description": "Total number of videos in album"
        },
        "photo_160": {
          "type": "string",
          "description": "URL of the preview image with 160px in width"
        },
        "photo_320": {
          "type": "string",
          "description": "URL of the preview image with 320px in width"
        },
        "updated_time": {
          "type": "integer",
          "description": "Date when the album has been updated last time in Unixtime",
          "minimum": 0
        },
        "is_system": {
          "type": "integer",
          "description": "Information whether album is system"
        }
      },
      "required": [
        "id",
        "owner_id",
        "title",
        "updated_time",
        "count"
      ],
      "additionalProperties": false
    },
    "video_cat_block_view": {
      "type": "string",
      "description": "Type of view",
      "enum": [
        "horizontal",
        "horizontal_compact",
        "vertical",
        "vertical_compact"
      ]
    },
    "video_cat_block": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/video_cat_element"
          }
        },
        "next": {
          "type": "string",
          "description": "New value for _from_ parameter"
        },
        "name": {
          "type": "string",
          "description": "Block name"
        },
        "id": {
          "type": "integer",
          "description": "Block ID"
        },
        "view": {
          "$ref": "#/definitions/video_cat_block_view"
        },
        "can_hide": {
          "description": "Information whether the block can be hidden",
          "$ref": "#/definitions/base_bool_int"
        },
        "type": {
          "$ref": "#/definitions/video_cat_block_view"
        }
      },
      "required": [
        "items",
        "next",
        "name",
        "id",
        "view",
        "can_hide"
      ]
    },
    "video_cat_element_type": {
      "type": "string",
      "description": "Element type",
      "enum": [
        "video",
        "album"
      ]
    },
    "video_cat_element": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Element ID"
        },
        "owner_id": {
          "type": "integer",
          "description": "Element owner's ID"
        },
        "title": {
          "type": "string",
          "description": "Element title"
        },
        "type": {
          "$ref": "#/definitions/video_cat_element_type"
        },
        "description": {
          "type": "string",
          "description": "Element description"
        },
        "duration": {
          "type": "integer",
          "description": "Duration in seconds"
        },
        "photo_130": {
          "type": "string",
          "description": "URL of the preview image with 130 px in width"
        },
        "photo_160": {
          "type": "string",
          "description": "URL of the preview image with 160 px in width"
        },
        "photo_320": {
          "type": "string",
          "description": "URL of the preview image with 320 px in width"
        },
        "photo_640": {
          "type": "string",
          "description": "URL of the preview image with 640 px in width"
        },
        "photo_800": {
          "type": "string",
          "description": "URL of the preview image with 800 px in width"
        },
        "date": {
          "type": "integer",
          "description": "Date when the element has been created"
        },
        "views": {
          "type": "integer",
          "description": "Views number"
        },
        "comments": {
          "type": "integer",
          "description": "Comments number"
        },
        "can_add": {
          "$ref": "#/definitions/base_bool_int",
          "description": "Information whether current user can add the video"
        },
        "can_edit": {
          "$ref": "#/definitions/base_bool_int",
          "description": "Information whether current user can edit the video"
        },
        "is_private": {
          "$ref": "#/definitions/base_bool_int",
          "description": "Information whether the video is private"
        },
        "count": {
          "type": "integer",
          "description": "Videos number (for album)"
        },
        "updated_time": {
          "type": "integer",
          "description": "Date of last update (for album) in Unixtime"
        }
      },
      "required": [
        "id",
        "owner_id",
        "title",
        "type"
      ]
    },
    "video_save_result": {
      "type": "object",
      "properties": {
        "upload_url": {
          "type": "string",
          "description": "URL for the video uploading"
        },
        "video_id": {
          "type": "integer",
          "description": "Video ID"
        },
        "owner_id": {
          "type": "integer",
          "description": "Video owner ID"
        },
        "title": {
          "type": "string",
          "description": "Video title"
        },
        "description": {
          "type": "string",
          "description": "Video description"
        }
      }
    },
    "video_video_tag": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "description": "Tagged user ID"
        },
        "id": {
          "type": "integer",
          "description": "Tag ID"
        },
        "placer_id": {
          "type": "integer",
          "description": "ID of the tag creator"
        },
        "tagged_name": {
          "type": "string",
          "description": "Tag description"
        },
        "date": {
          "type": "integer",
          "description": "Date when tag has been added in Unixtime",
          "minimum": 0
        },
        "viewed": {
          "description": "Information whether tha tag is reviewed",
          "$ref": "#/definitions/base_bool_int"
        }
      },
      "required": [
        "user_id",
        "id",
        "tagged_name",
        "placer_id",
        "date",
        "viewed"
      ],
      "additionalProperties": false
    },
    "video_upload_response": {
      "type": "object",
      "properties": {
        "size": {
          "type": "integer",
          "description": "Video size"
        },
        "video_id": {
          "type": "integer",
          "description": "Video ID"
        }
      }
    },
    "video_video": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Video ID"
        },
        "owner_id": {
          "type": "integer",
          "description": "Video owner ID"
        },
        "title": {
          "type": "string",
          "description": "Video title"
        },
        "duration": {
          "type": "integer",
          "description": "Video duration in seconds"
        },
        "description": {
          "type": "string",
          "description": "Video description"
        },
        "date": {
          "type": "integer",
          "description": "Date when video has been uploaded in Unixtime"
        },
        "views": {
          "type": "integer",
          "description": "Number of views"
        },
        "comments": {
          "type": "integer",
          "description": "Number of comments"
        },
        "photo_130": {
          "type": "string",
          "description": "URL of the preview image with 130 px in width"
        },
        "photo_320": {
          "type": "string",
          "description": "URL of the preview image with 320 px in width"
        },
        "photo_800": {
          "type": "string",
          "description": "URL of the preview image with 800 px in width"
        },
        "access_key": {
          "type": "string",
          "description": "Video access key"
        },
        "adding_date": {
          "type": "integer",
          "description": "Date when the video has been added in Unixtime"
        },
        "player": {
          "type": "string",
          "description": "URL of the page with a player that can be used to play the video in the browser."
        },
        "can_edit": {
          "description": "Information whether current user can edit the video",
          "$ref": "#/definitions/base_bool_int"
        },
        "can_add": {
          "description": "Information whether current user can add the video",
          "$ref": "#/definitions/base_bool_int"
        },
        "processing": {
          "description": "Returns if the video is processing",
          "$ref": "#/definitions/base_property_exists"
        },
        "live": {
          "description": "Returns if the video is live translation",
          "$ref": "#/definitions/base_property_exists"
        },
        "files": {
          "$ref": "#/definitions/video_video_files"
        }
      },
      "additionalProperties": false
    },
    "video_video_files": {
      "type": "object",
      "properties": {
        "mp_240": {
          "type": "string",
          "description": "URL of the mpeg4 file with 240p quality"
        },
        "mp_360": {
          "type": "string",
          "description": "URL of the mpeg4 file with 360p quality"
        },
        "mp_480": {
          "type": "string",
          "description": "URL of the mpeg4 file with 480p quality"
        },
        "mp_720": {
          "type": "string",
          "description": "URL of the mpeg4 file with 720p quality"
        },
        "mp_1080": {
          "type": "string",
          "description": "URL of the mpeg4 file with 1080p quality"
        },
        "external": {
          "type": "string",
          "description": "URL of the external player"
        }
      },
      "minProperties": 1,
      "additionalProperties": false
    },
    "video_video_tag_info": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Video ID"
        },
        "owner_id": {
          "type": "integer",
          "description": "Video owner ID"
        },
        "title": {
          "type": "string",
          "description": "Video title"
        },
        "duration": {
          "type": "integer",
          "description": "Video duration in seconds"
        },
        "description": {
          "type": "string",
          "description": "Video description"
        },
        "date": {
          "type": "integer",
          "description": "Date when video has been uploaded in Unixtime"
        },
        "views": {
          "type": "integer",
          "description": "Number of views"
        },
        "comments": {
          "type": "integer",
          "description": "Number of comments"
        },
        "photo_130": {
          "type": "string",
          "description": "URL of the preview image with 130 px in width"
        },
        "photo_320": {
          "type": "string",
          "description": "URL of the preview image with 320 px in width"
        },
        "photo_800": {
          "type": "string",
          "description": "URL of the preview image with 800 px in width"
        },
        "access_key": {
          "type": "string",
          "description": "Video access key"
        },
        "adding_date": {
          "type": "integer",
          "description": "Date when the video has been added in Unixtime"
        },
        "player": {
          "type": "string",
          "description": "URL of the page with a player that can be used to play the video in the browser."
        },
        "can_edit": {
          "description": "Information whether current user can edit the video",
          "$ref": "#/definitions/base_bool_int"
        },
        "can_add": {
          "description": "Information whether current user can add the video",
          "$ref": "#/definitions/base_bool_int"
        },
        "processing": {
          "description": "Returns if the video is processing",
          "$ref": "#/definitions/base_property_exists"
        },
        "live": {
          "description": "Returns if the video is live translation",
          "$ref": "#/definitions/base_property_exists"
        },
        "files": {
          "$ref": "#/definitions/video_video_files"
        },
        "placer_id": {
          "type": "integer",
          "description": "ID of the tag creator"
        },
        "tag_created": {
          "type": "integer",
          "description": "Date when tag has been added in Unixtime",
          "minimum": 0
        },
        "tag_id": {
          "type": "integer",
          "description": "Tag ID"
        }
      }
    },
    "video_video_full": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Video ID"
        },
        "owner_id": {
          "type": "integer",
          "description": "Video owner ID"
        },
        "title": {
          "type": "string",
          "description": "Video title"
        },
        "duration": {
          "type": "integer",
          "description": "Video duration in seconds"
        },
        "description": {
          "type": "string",
          "description": "Video description"
        },
        "date": {
          "type": "integer",
          "description": "Date when video has been uploaded in Unixtime"
        },
        "views": {
          "type": "integer",
          "description": "Number of views"
        },
        "comments": {
          "type": "integer",
          "description": "Number of comments"
        },
        "photo_130": {
          "type": "string",
          "description": "URL of the preview image with 130 px in width"
        },
        "photo_320": {
          "type": "string",
          "description": "URL of the preview image with 320 px in width"
        },
        "photo_800": {
          "type": "string",
          "description": "URL of the preview image with 800 px in width"
        },
        "access_key": {
          "type": "string",
          "description": "Video access key"
        },
        "adding_date": {
          "type": "integer",
          "description": "Date when the video has been added in Unixtime"
        },
        "player": {
          "type": "string",
          "description": "URL of the page with a player that can be used to play the video in the browser."
        },
        "can_edit": {
          "description": "Information whether current user can edit the video",
          "$ref": "#/definitions/base_bool_int"
        },
        "can_add": {
          "description": "Information whether current user can add the video",
          "$ref": "#/definitions/base_bool_int"
        },
        "processing": {
          "description": "Returns if the video is processing",
          "$ref": "#/definitions/base_property_exists"
        },
        "live": {
          "description": "Returns if the video is live translation",
          "$ref": "#/definitions/base_property_exists"
        },
        "files": {
          "$ref": "#/definitions/video_video_files"
        },
        "privacy_view": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "Privacy view"
          }
        },
        "privacy_comment": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "Privacy comment"
          }
        },
        "can_comment": {
          "description": "Information whether current user can comment the video",
          "$ref": "#/definitions/base_bool_int"
        },
        "can_repost": {
          "description": "Information whether current user can comment the video",
          "$ref": "#/definitions/base_bool_int"
        },
        "likes": {
          "$ref": "#/definitions/base_likes"
        },
        "repeat": {
          "description": "Information whether the video is repeated",
          "$ref": "#/definitions/base_bool_int"
        }
      }
    },
    "wall_app_post": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Application ID"
        },
        "name": {
          "type": "string",
          "description": "Application name"
        },
        "photo_130": {
          "type": "string",
          "description": "URL of the preview image with 130 px in width"
        },
        "photo_604": {
          "type": "string",
          "description": "URL of the preview image with 604 px in width"
        }
      }
    },
    "wall_attached_note": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Note ID",
          "minimum": 1
        },
        "owner_id": {
          "type": "integer",
          "description": "Note owner's ID",
          "minimum": 1
        },
        "comments": {
          "type": "integer",
          "description": "Comments number",
          "minimum": 0
        },
        "read_comments": {
          "type": "integer",
          "description": "Read comments number",
          "minimum": 0
        },
        "date": {
          "type": "integer",
          "description": "Date when the note has been created in Unixtime",
          "minimum": 0
        },
        "title": {
          "type": "string",
          "description": "Note title"
        },
        "view_url": {
          "type": "string",
          "description": "URL of the page with note preview"
        }
      },
      "required": [
        "id",
        "owner_id",
        "comments",
        "read_comments",
        "date",
        "title",
        "view_url"
      ],
      "additionalProperties": false
    },
    "wall_comment_attachment_type": {
      "type": "string",
      "description": "Attachment type",
      "enum": [
        "photo",
        "audio",
        "video",
        "doc",
        "link",
        "note",
        "page",
        "market_market_album",
        "market",
        "sticker"
      ]
    },
    "wall_comment_attachment": {
      "type": "object",
      "properties": {
        "photo": {
          "$ref": "#/definitions/photos_photo"
        },
        "audio": {
          "$ref": "#/definitions/audio_audio_full"
        },
        "video": {
          "$ref": "#/definitions/video_video"
        },
        "doc": {
          "$ref": "#/definitions/docs_doc"
        },
        "link": {
          "$ref": "#/definitions/base_link"
        },
        "note": {
          "$ref": "#/definitions/wall_attached_note"
        },
        "page": {
          "$ref": "#/definitions/pages_wikipage_full"
        },
        "market_market_album": {
          "$ref": "#/definitions/market_market_album"
        },
        "market": {
          "$ref": "#/definitions/market_market_item"
        },
        "sticker": {
          "$ref": "#/definitions/base_sticker"
        },
        "type": {
          "$ref": "#/definitions/wall_comment_attachment_type"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": false
    },
    "wall_graffiti": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Graffiti ID"
        },
        "owner_id": {
          "type": "integer",
          "description": "Graffiti owner's ID"
        },
        "photo_200": {
          "type": "string",
          "description": "URL of the preview image with 200 px in width"
        },
        "photo_586": {
          "type": "string",
          "description": "URL of the preview image with 586 px in width"
        }
      }
    },
    "wall_post_source_type": {
      "type": "string",
      "description": "Type of post source",
      "enum": [
        "vk",
        "widget",
        "api",
        "rss",
        "sms"
      ]
    },
    "wall_post_source": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/wall_post_source_type"
        },
        "platform": {
          "type": "string",
          "description": "Platform name"
        },
        "data": {
          "type": "string",
          "description": "Additional data"
        },
        "url": {
          "type": "string",
          "description": "URL to an external site used to publish the post"
        }
      }
    },
    "wall_posted_photo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Photo ID"
        },
        "owner_id": {
          "type": "integer",
          "description": "Photo owner's ID"
        },
        "photo_130": {
          "type": "string",
          "description": "URL of the preview image with 130 px in width"
        },
        "photo_604": {
          "type": "string",
          "description": "URL of the preview image with 604 px in width"
        }
      }
    },
    "wall_post_type": {
      "type": "string",
      "description": "Post type",
      "enum": [
        "post",
        "copy",
        "reply",
        "postpone",
        "suggest"
      ]
    },
    "wall_wall_comment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Comment ID",
          "minimum": 1
        },
        "from_id": {
          "type": "integer",
          "description": "Author ID"
        },
        "date": {
          "type": "integer",
          "description": "Date when the comment has been added in Unixtime",
          "minimum": 0
        },
        "text": {
          "type": "string",
          "description": "Comment text"
        },
        "likes": {
          "$ref": "#/definitions/base_likes_info"
        },
        "reply_to_user": {
          "type": "integer",
          "description": "Replied user ID"
        },
        "reply_to_comment": {
          "type": "integer",
          "description": "Replied comment ID"
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/wall_comment_attachment"
          }
        },
        "real_offset": {
          "type": "integer",
          "description": "Real position of the comment"
        }
      },
      "required": [
        "id",
        "from_id",
        "date",
        "text"
      ],
      "additionalProperties": false
    },
    "wall_views": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Count"
        }
      },
      "additionalProperties": false
    },
    "wall_wallpost": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Post ID"
        },
        "from_id": {
          "type": "integer",
          "description": "Post author ID"
        },
        "owner_id": {
          "type": "integer",
          "description": "Wall owner's ID"
        },
        "date": {
          "type": "integer",
          "description": "Date of publishing in Unixtime"
        },
        "views": {
          "description": "Count of views",
          "$ref": "#/definitions/wall_views"
        },
        "access_key": {
          "type": "string",
          "description": "Access key to private object"
        },
        "post_type": {
          "$ref": "#/definitions/wall_post_type"
        },
        "text": {
          "type": "string",
          "description": "Post text"
        },
        "signer_id": {
          "type": "integer",
          "description": "Post signer ID"
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/wall_wallpost_attachment"
          }
        },
        "geo": {
          "$ref": "#/definitions/base_geo"
        },
        "post_source": {
          "$ref": "#/definitions/wall_post_source"
        }
      }
    },
    "wall_wallpost_attached": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Post ID"
        },
        "from_id": {
          "type": "integer",
          "description": "Post author ID"
        },
        "to_id": {
          "type": "integer",
          "description": "Post addresse"
        },
        "date": {
          "type": "integer",
          "description": "Date of publishing in Unixtime"
        },
        "post_type": {
          "$ref": "#/definitions/wall_post_type"
        },
        "text": {
          "type": "string",
          "description": "Post text"
        },
        "can_delete": {
          "$ref": "#/definitions/base_bool_int",
          "description": "Information whether current user can delete the post"
        },
        "signer_id": {
          "type": "integer",
          "description": "Post signer ID"
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/wall_wallpost_attachment"
          }
        },
        "geo": {
          "$ref": "#/definitions/base_geo"
        },
        "post_source": {
          "$ref": "#/definitions/wall_post_source"
        },
        "comments": {
          "$ref": "#/definitions/base_comments_info"
        },
        "likes": {
          "$ref": "#/definitions/base_likes_info"
        },
        "reposts": {
          "$ref": "#/definitions/base_reposts_info"
        },
        "copy_owner_id": {
          "type": "integer",
          "description": "Source post owner's ID"
        },
        "copy_post_id": {
          "type": "integer",
          "description": "Source post ID"
        },
        "copy_text": {
          "type": "string",
          "description": "Repost comment"
        }
      }
    },
    "wall_wallpost_attachment_type": {
      "type": "string",
      "description": "Attachment type",
      "enum": [
        "photo",
        "posted_photo",
        "audio",
        "video",
        "doc",
        "link",
        "graffiti",
        "note",
        "app",
        "poll",
        "page",
        "album",
        "photos_list",
        "market_market_album",
        "market"
      ]
    },
    "wall_wallpost_attachment": {
      "type": "object",
      "properties": {
        "photo": {
          "$ref": "#/definitions/photos_photo"
        },
        "posted_photo": {
          "$ref": "#/definitions/wall_posted_photo"
        },
        "audio": {
          "$ref": "#/definitions/audio_audio_full"
        },
        "video": {
          "$ref": "#/definitions/video_video"
        },
        "doc": {
          "$ref": "#/definitions/docs_doc"
        },
        "link": {
          "$ref": "#/definitions/base_link"
        },
        "graffiti": {
          "$ref": "#/definitions/wall_graffiti"
        },
        "note": {
          "$ref": "#/definitions/wall_attached_note"
        },
        "app": {
          "$ref": "#/definitions/wall_app_post"
        },
        "poll": {
          "$ref": "#/definitions/polls_poll"
        },
        "page": {
          "$ref": "#/definitions/pages_wikipage_full"
        },
        "album": {
          "$ref": "#/definitions/photos_photo_album"
        },
        "photos_list": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "String ID of photo"
          }
        },
        "market_market_album": {
          "$ref": "#/definitions/market_market_album"
        },
        "market": {
          "$ref": "#/definitions/market_market_item"
        },
        "type": {
          "$ref": "#/definitions/wall_wallpost_attachment_type"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": false
    },
    "wall_wallpost_to_id": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Post ID"
        },
        "from_id": {
          "type": "integer",
          "description": "Post author ID"
        },
        "to_id": {
          "type": "integer",
          "description": "Wall owner's ID"
        },
        "date": {
          "type": "integer",
          "description": "Date of publishing in Unixtime"
        },
        "post_id": {
          "type": "integer",
          "description": "wall post ID (if comment)"
        },
        "post_type": {
          "$ref": "#/definitions/wall_post_type"
        },
        "text": {
          "type": "string",
          "description": "Post text"
        },
        "signer_id": {
          "type": "integer",
          "description": "Post signer ID"
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/wall_wallpost_attachment"
          }
        },
        "geo": {
          "$ref": "#/definitions/base_geo"
        },
        "post_source": {
          "$ref": "#/definitions/wall_post_source"
        },
        "comments": {
          "$ref": "#/definitions/base_comments_info"
        },
        "likes": {
          "$ref": "#/definitions/base_likes_info"
        },
        "reposts": {
          "$ref": "#/definitions/base_reposts_info"
        },
        "copy_owner_id": {
          "type": "integer",
          "description": "ID of the source post owner"
        },
        "copy_post_id": {
          "type": "integer",
          "description": "ID of the source post"
        }
      }
    },
    "wall_wallpost_full": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/wall_wallpost"
        },
        {
          "properties": {
            "copy_history": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/wall_wallpost"
              }
            },
            "can_edit": {
              "$ref": "#/definitions/base_bool_int",
              "description": "Information whether current user can edit the post"
            },
            "created_by": {
              "type": "integer",
              "description": "Post creator ID (if post still can be edited)"
            },
            "can_delete": {
              "$ref": "#/definitions/base_bool_int",
              "description": "Information whether current user can delete the post"
            },
            "can_pin": {
              "$ref": "#/definitions/base_bool_int",
              "description": "Information whether current user can pin the post"
            },
            "is_pinned": {
              "type": "integer",
              "description": "Information whether the post is pinned"
            },
            "comments": {
              "$ref": "#/definitions/base_comments_info"
            },
            "likes": {
              "$ref": "#/definitions/base_likes_info"
            },
            "reposts": {
              "$ref": "#/definitions/base_reposts_info"
            },
            "marked_as_ads": {
              "$ref": "#/definitions/base_bool_int",
              "description": "Information whether the post is marked as ads"
            }
          }
        }
      ]
    },
    "widgets_widget_comment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Comment ID"
        },
        "from_id": {
          "type": "integer",
          "description": "Comment author ID"
        },
        "to_id": {
          "type": "integer",
          "description": "Wall owner"
        },
        "date": {
          "type": "integer",
          "description": "Date when the comment has been added in Unixtime"
        },
        "user": {
          "$ref": "#/definitions/users_user_full"
        },
        "post_type": {
          "type": "integer",
          "description": "Post type"
        },
        "text": {
          "type": "string",
          "description": "Comment text"
        },
        "can_delete": {
          "$ref": "#/definitions/base_bool_int",
          "description": "Information whether current user can delete the comment"
        },
        "media": {
          "$ref": "#/definitions/widgets_comment_media"
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/wall_comment_attachment"
          }
        },
        "post_source": {
          "$ref": "#/definitions/wall_post_source"
        },
        "comments": {
          "$ref": "#/definitions/widgets_comment_replies"
        },
        "likes": {
          "$ref": "#/definitions/base_likes_info"
        },
        "reposts": {
          "$ref": "#/definitions/base_reposts_info"
        }
      },
      "required": [
        "id",
        "from_id",
        "to_id",
        "date",
        "post_type",
        "text"
      ],
      "additionalProperties": false
    },
    "widgets_comment_media_type": {
      "type": "string",
      "description": "Media type",
      "enum": [
        "audio",
        "photo",
        "video"
      ]
    },
    "widgets_comment_media": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/widgets_comment_media_type"
        },
        "owner_id": {
          "type": "integer",
          "description": "Media owner's ID"
        },
        "item_id": {
          "type": "integer",
          "description": "Media item ID"
        },
        "thumb_src": {
          "type": "string",
          "description": "URL of the preview image (type=photo only)"
        }
      }
    },
    "widgets_comment_replies": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Comments number"
        },
        "can_post": {
          "$ref": "#/definitions/base_bool_int",
          "description": "Information whether current user can comment the post"
        },
        "replies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/widgets_comment_replies_item"
          }
        }
      }
    },
    "widgets_comment_replies_item": {
      "type": "object",
      "properties": {
        "cid": {
          "type": "integer",
          "description": "Comment ID"
        },
        "uid": {
          "type": "integer",
          "description": "User ID"
        },
        "date": {
          "type": "integer",
          "description": "Date when the comment has been added in Unixtime"
        },
        "text": {
          "type": "string",
          "description": "Comment text"
        },
        "likes": {
          "$ref": "#/definitions/widgets_widget_likes"
        },
        "user": {
          "$ref": "#/definitions/users_user_full"
        }
      }
    },
    "widgets_widget_likes": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Likes number"
        }
      }
    },
    "widgets_widget_page": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Page ID"
        },
        "title": {
          "type": "string",
          "description": "Page title"
        },
        "description": {
          "type": "string",
          "description": "Page description"
        },
        "photo": {
          "type": "string",
          "description": "URL of the preview image"
        },
        "url": {
          "type": "string",
          "description": "Page absolute URL"
        },
        "likes": {
          "$ref": "#/definitions/base_object_count"
        },
        "comments": {
          "$ref": "#/definitions/base_object_count"
        },
        "date": {
          "type": "integer",
          "description": "Date when widgets on the page has been initialized firstly in Unixtime"
        },
        "page_id": {
          "type": "string",
          "description": "page_id parameter value"
        }
      }
    }
  }
}
